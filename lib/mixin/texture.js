"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createTexture = createTexture;
exports.enableAnisotropicFiltering = enableAnisotropicFiltering;
function createTexture(image, index, repeat) {
    var _context = this.context, RGBA = _context.RGBA, LINEAR = _context.LINEAR, UNSIGNED_BYTE = _context.UNSIGNED_BYTE, TEXTURE0 = _context.TEXTURE0, TEXTURE_2D = _context.TEXTURE_2D, TEXTURE_WRAP_S = _context.TEXTURE_WRAP_S, TEXTURE_WRAP_T = _context.TEXTURE_WRAP_T, UNPACK_FLIP_Y_WEBGL = _context.UNPACK_FLIP_Y_WEBGL, CLAMP_TO_EDGE = _context.CLAMP_TO_EDGE, NEAREST = _context.NEAREST, REPEAT = _context.REPEAT, TEXTURE_MIN_FILTER = _context.TEXTURE_MIN_FILTER, target = TEXTURE0 + index, level = 0, internalFormat = RGBA, format = RGBA, type = UNSIGNED_BYTE, texture = this.context.createTexture();
    this.context.activeTexture(target);
    this.context.bindTexture(TEXTURE_2D, texture);
    this.context.pixelStorei(UNPACK_FLIP_Y_WEBGL, true);
    this.context.texImage2D(TEXTURE_2D, level, internalFormat, format, type, image);
    if (repeat) {
        this.context.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, REPEAT);
        this.context.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, REPEAT);
    } else {
        this.context.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, CLAMP_TO_EDGE);
        this.context.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, CLAMP_TO_EDGE);
    }
    this.context.texParameteri(TEXTURE_2D, TEXTURE_MIN_FILTER, LINEAR);
    return texture;
}
function enableAnisotropicFiltering() {
    var extension = this.context.getExtension("EXT_texture_filter_anisotropic") || this.context.getExtension("MOZ_EXT_texture_filter_anisotropic") || this.context.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
    if (extension) {
        var _context = this.context, TEXTURE_2D = _context.TEXTURE_2D, MAX_TEXTURE_MAX_ANISOTROPY_EXT = extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT, TEXTURE_MAX_ANISOTROPY_EXT = extension.TEXTURE_MAX_ANISOTROPY_EXT, maximum = this.context.getParameter(MAX_TEXTURE_MAX_ANISOTROPY_EXT);
        this.context.texParameterf(TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, maximum);
    }
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbi90ZXh0dXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVGV4dHVyZShpbWFnZSwgaW5kZXgsIHJlcGVhdCkge1xuXHRjb25zdCB7IFJHQkEsIExJTkVBUiwgVU5TSUdORURfQllURSwgVEVYVFVSRTAsIFRFWFRVUkVfMkQsIFRFWFRVUkVfV1JBUF9TLCBURVhUVVJFX1dSQVBfVCwgVU5QQUNLX0ZMSVBfWV9XRUJHTCwgQ0xBTVBfVE9fRURHRSwgTkVBUkVTVCwgUkVQRUFULCBURVhUVVJFX01JTl9GSUxURVIgfSA9IHRoaXMuY29udGV4dCxcblx0XHRcdFx0dGFyZ2V0ID0gVEVYVFVSRTAgKyBpbmRleCxcblx0XHRcdFx0bGV2ZWwgPSAwLFxuXHRcdFx0XHRpbnRlcm5hbEZvcm1hdCA9IFJHQkEsXG5cdFx0XHRcdGZvcm1hdCA9IFJHQkEsXG5cdFx0XHRcdHR5cGUgPSBVTlNJR05FRF9CWVRFLFxuXHRcdFx0XHR0ZXh0dXJlID0gdGhpcy5jb250ZXh0LmNyZWF0ZVRleHR1cmUoKTtcblxuICB0aGlzLmNvbnRleHQuYWN0aXZlVGV4dHVyZSh0YXJnZXQpO1xuXG4gIHRoaXMuY29udGV4dC5iaW5kVGV4dHVyZShURVhUVVJFXzJELCB0ZXh0dXJlKTtcblxuICB0aGlzLmNvbnRleHQucGl4ZWxTdG9yZWkoVU5QQUNLX0ZMSVBfWV9XRUJHTCwgdHJ1ZSk7XG5cbiAgdGhpcy5jb250ZXh0LnRleEltYWdlMkQoVEVYVFVSRV8yRCwgbGV2ZWwsIGludGVybmFsRm9ybWF0LCBmb3JtYXQsIHR5cGUsIGltYWdlKTtcblxuICBpZiAocmVwZWF0KSB7XG4gICAgdGhpcy5jb250ZXh0LnRleFBhcmFtZXRlcmkoVEVYVFVSRV8yRCwgVEVYVFVSRV9XUkFQX1MsIFJFUEVBVCk7XG4gICAgdGhpcy5jb250ZXh0LnRleFBhcmFtZXRlcmkoVEVYVFVSRV8yRCwgVEVYVFVSRV9XUkFQX1QsIFJFUEVBVCk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5jb250ZXh0LnRleFBhcmFtZXRlcmkoVEVYVFVSRV8yRCwgVEVYVFVSRV9XUkFQX1MsIENMQU1QX1RPX0VER0UpO1xuICAgIHRoaXMuY29udGV4dC50ZXhQYXJhbWV0ZXJpKFRFWFRVUkVfMkQsIFRFWFRVUkVfV1JBUF9ULCBDTEFNUF9UT19FREdFKTtcbiAgfVxuXG5cdHRoaXMuY29udGV4dC50ZXhQYXJhbWV0ZXJpKFRFWFRVUkVfMkQsIFRFWFRVUkVfTUlOX0ZJTFRFUiwgTElORUFSKTtcblxuXHRyZXR1cm4gdGV4dHVyZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZUFuaXNvdHJvcGljRmlsdGVyaW5nKCkge1xuICBjb25zdCBleHRlbnNpb24gPSAoXG4gICAgdGhpcy5jb250ZXh0LmdldEV4dGVuc2lvbihcIkVYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpY1wiKSB8fFxuICAgIHRoaXMuY29udGV4dC5nZXRFeHRlbnNpb24oXCJNT1pfRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljXCIpIHx8XG4gICAgdGhpcy5jb250ZXh0LmdldEV4dGVuc2lvbihcIldFQktJVF9FWFRfdGV4dHVyZV9maWx0ZXJfYW5pc290cm9waWNcIilcbiAgKTtcblxuICBpZiAoZXh0ZW5zaW9uKSB7XG4gICAgY29uc3QgeyBURVhUVVJFXzJEIH0gPSB0aGlzLmNvbnRleHQsXG4gICAgICAgICAgeyBNQVhfVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQsIFRFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhUIH0gPSBleHRlbnNpb24sXG4gICAgICAgICAgbWF4aW11bSA9IHRoaXMuY29udGV4dC5nZXRQYXJhbWV0ZXIoTUFYX1RFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhUKTtcblxuICAgIHRoaXMuY29udGV4dC50ZXhQYXJhbWV0ZXJmKFRFWFRVUkVfMkQsIFRFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhULCBtYXhpbXVtKTtcbiAgfVxu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