{
  "version": 3,
  "sources": ["../../src/element.js", "../../src/maths/matrix.js", "../../src/maths/vector.js", "../../node_modules/necessary/src/constants.js", "../../node_modules/necessary/src/utilities/ajax.js", "../../node_modules/necessary/src/utilities/array.js", "../../node_modules/necessary/src/utilities/path.js", "../../node_modules/necessary/src/utilities/asynchronous.js", "../../node_modules/necessary/src/browser.js", "../../src/utilities/array.js", "../../src/constants.js", "../../src/utilities/matrix.js", "../../src/utilities/transform.js", "../../src/element/canvas.js", "../../src/element/canvas/function.js", "../../src/react.js", "../../src/xgl.js", "../../src/mixin/matrix.js", "../../src/mixin/blending.js", "../../src/mixin/program.js", "../../src/mixin/colour.js", "../../src/mixin/texture.js", "../../src/mixin/depth.js", "../../src/mixin/shader.js", "../../src/mixin/buffer.js", "../../src/mixin/location.js", "../../src/canvas.js", "../../src/primitive/edge.js", "../../src/utilities/midPoint.js", "../../src/primitive/edge/masking.js", "../../src/utilities/approximate.js", "../../src/utilities/angle.js", "../../src/utilities/quaternion.js", "../../src/utilities/rotation.js", "../../src/utilities/intersection.js", "../../src/primitive/verticalLine.js", "../../src/utilities/vertices.js", "../../src/primitive/maskingFacet.js", "../../src/element/mask.js", "../../src/renderer.js", "../../src/renderer/data.js", "../../src/renderer/data/colour.js", "../../src/renderer/source/lighting.js", "../../src/renderer/source/position.js", "../../src/renderer/source/colour/vertexShader.js", "../../src/renderer/source/colour/fragmentShader.js", "../../src/renderer/buffers.js", "../../src/renderer/buffers/colour.js", "../../src/renderer/locations/uniform.js", "../../src/renderer/locations/colour/uniform.js", "../../src/renderer/locations/attribute.js", "../../src/renderer/locations/colour/attribute.js", "../../src/renderer/colour.js", "../../src/renderer/source/texture/vertexShader.js", "../../src/renderer/data/texture.js", "../../src/renderer/source/texture/fragmentShader.js", "../../src/renderer/buffers/texture.js", "../../src/renderer/locations/texture/uniform.js", "../../src/renderer/locations/texture/attribute.js", "../../src/renderer/texture.js", "../../src/renderer/texture/images.js", "../../src/renderer/texture/imageMap.js", "../../src/element/part.js", "../../src/element/camera.js", "../../src/miscellaneous/keyEvents.js", "../../src/miscellaneous/mouseEvents.js", "../../src/miscellaneous/userInput.js", "../../src/element/scene.js", "../../src/utilities/offsets.js", "../../src/miscellaneous/pan.js", "../../src/miscellaneous/tilt.js", "../../src/element/camera/gaming.js", "../../src/miscellaneous/zoom.js", "../../src/element/camera/design.js", "../../src/primitive/normal.js", "../../src/primitive/vertex.js", "../../src/utilities/facet.js", "../../src/primitive/facet.js", "../../src/primitive/facet/coloured.js", "../../src/element/canvas/coloured.js", "../../src/utilities/texture.js", "../../src/primitive/facet/textured.js", "../../src/element/canvas/textured.js", "../../src/index.js", "../../src/example/element/colouredSquare.js", "../../src/example/element/face.js", "../../src/example/element/cube.js", "../../src/example/cube.js", "../../src/example/simple.js", "../../src/example/masking.js", "../../src/example/element/texturedTriangle.js", "../../src/example/element/side.js", "../../src/example/element/pyramid.js", "../../src/miscellaneous/configuration.js", "../../src/example/pyramid.js", "../../src/example/element/texturedQuadrangle.js", "../../src/example/tiling.js", "../../src/example.js"],
  "sourcesContent": ["\"use strict\";\n\nexport default class Element {\n  getChildElements() {\n    return this.childElements;\n  }\n\n  setChildElements(childElements) {\n    this.childElements = childElements;\n  }\n\n  static fromProperties(Class, properties, ...remainingArguments) {\n    const element = new Class(...remainingArguments),\n          childElements = (typeof element.childElements === \"function\") ?\n                            element.childElements(properties) :\n                              properties.childElements || [];\n\n    element.setChildElements(childElements);\n\n    return element;\n  }\n}\n", "\"use strict\";\n\nexport function identity2() {\n  return ([\n\n    1, 0,\n    0, 1,\n\n  ]);\n}\n\nexport function identity3() {\n  return ([\n\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n\n  ]);\n}\n\nexport function identity4() {\n  return ([\n\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1,\n\n  ]);\n}\n\nexport function multiply2(matrixA, matrixB) {\n  const a0 = matrixA[0],\n        a1 = matrixA[1],\n        a2 = matrixA[2],\n        a3 = matrixA[3],\n\n        b0 = matrixB[0],\n        b1 = matrixB[1],\n        b2 = matrixB[2],\n        b3 = matrixB[3];\n\n  return ([\n\n    a0 * b0 + a2 * b1,\n    a1 * b0 + a3 * b1,\n\n    a0 * b2 + a2 * b3,\n    a1 * b2 + a3 * b3,\n\n  ]);\n}\n\nexport function multiply3(matrixA, matrixB) {\n  const a0 = matrixA[0],\n        a1 = matrixA[1],\n        a2 = matrixA[2],\n        a3 = matrixA[3],\n        a4 = matrixA[4],\n        a5 = matrixA[5],\n        a6 = matrixA[6],\n        a7 = matrixA[7],\n        a8 = matrixA[8],\n\n        b0 = matrixB[0],\n        b1 = matrixB[1],\n        b2 = matrixB[2],\n        b3 = matrixB[3],\n        b4 = matrixB[4],\n        b5 = matrixB[5],\n        b6 = matrixB[6],\n        b7 = matrixB[7],\n        b8 = matrixB[8];\n\n  return ([\n\n    a0 * b0 + a3 * b1 + a6 * b2,\n    a1 * b0 + a4 * b1 + a7 * b2,\n    a2 * b0 + a5 * b1 + a8 * b2,\n\n    a0 * b3 + a3 * b4 + a6 * b5,\n    a1 * b3 + a4 * b4 + a7 * b5,\n    a2 * b3 + a5 * b4 + a8 * b5,\n\n    a0 * b6 + a3 * b7 + a6 * b8,\n    a1 * b6 + a4 * b7 + a7 * b8,\n    a2 * b6 + a5 * b7 + a8 * b8,\n\n  ]);\n}\n\nexport function multiply4(matrixA, matrixB) {\n  const  a0 = matrixA[ 0],\n         a1 = matrixA[ 1],\n         a2 = matrixA[ 2],\n         a3 = matrixA[ 3],\n         a4 = matrixA[ 4],\n         a5 = matrixA[ 5],\n         a6 = matrixA[ 6],\n         a7 = matrixA[ 7],\n         a8 = matrixA[ 8],\n         a9 = matrixA[ 9],\n        a10 = matrixA[10],\n        a11 = matrixA[11],\n        a12 = matrixA[12],\n        a13 = matrixA[13],\n        a14 = matrixA[14],\n        a15 = matrixA[15],\n\n         b0 = matrixB[ 0],\n         b1 = matrixB[ 1],\n         b2 = matrixB[ 2],\n         b3 = matrixB[ 3],\n         b4 = matrixB[ 4],\n         b5 = matrixB[ 5],\n         b6 = matrixB[ 6],\n         b7 = matrixB[ 7],\n         b8 = matrixB[ 8],\n         b9 = matrixB[ 9],\n        b10 = matrixB[10],\n        b11 = matrixB[11],\n        b12 = matrixB[12],\n        b13 = matrixB[13],\n        b14 = matrixB[14],\n        b15 = matrixB[15];\n\n  return ([\n\n    a0 *  b0 +  a4 *  b1 +  a8 *  b2 + a12 *  b3,\n    a1 *  b0 +  a5 *  b1 +  a9 *  b2 + a13 *  b3,\n    a2 *  b0 +  a6 *  b1 + a10 *  b2 + a14 *  b3,\n    a3 *  b0 +  a7 *  b1 + a11 *  b2 + a15 *  b3,\n\n    a0 *  b4 +  a4 *  b5 +  a8 *  b6 + a12 *  b7,\n    a1 *  b4 +  a5 *  b5 +  a9 *  b6 + a13 *  b7,\n    a2 *  b4 +  a6 *  b5 + a10 *  b6 + a14 *  b7,\n    a3 *  b4 +  a7 *  b5 + a11 *  b6 + a15 *  b7,\n\n    a0 *  b8 +  a4 *  b9 +  a8 * b10 + a12 * b11,\n    a1 *  b8 +  a5 *  b9 +  a9 * b10 + a13 * b11,\n    a2 *  b8 +  a6 *  b9 + a10 * b10 + a14 * b11,\n    a3 *  b8 +  a7 *  b9 + a11 * b10 + a15 * b11,\n\n    a0 * b12 +  a4 * b13 +  a8 * b14 + a12 * b15,\n    a1 * b12 +  a5 * b13 +  a9 * b14 + a13 * b15,\n    a2 * b12 +  a6 * b13 + a10 * b14 + a14 * b15,\n    a3 * b12 +  a7 * b13 + a11 * b14 + a15 * b15,\n\n  ]);\n}\n\nexport function invert2(matrix) {\n  const m0 = matrix[0],\n        m1 = matrix[1],\n        m2 = matrix[2],\n        m3 = matrix[3],\n\n        determinant = m0 * m3 - m2 * m1;\n\n  if (determinant !== 0) {\n    return ([\n\n      +m3 / determinant, -m1 / determinant,\n      -m2 / determinant, +m0 / determinant,\n\n    ]);\n  }\n}\n\nexport function invert3(matrix) {\n  const m00 = matrix[0], m01 = matrix[1], m02 = matrix[2],\n        m10 = matrix[3], m11 = matrix[4], m12 = matrix[5],\n        m20 = matrix[6], m21 = matrix[7], m22 = matrix[8],\n\n        b01 =  m22 * m11 - m12 * m21,\n        b11 = -m22 * m10 + m12 * m20,\n        b21 =  m21 * m10 - m11 * m20,\n\n        determinant = m00 * b01 + m01 * b11 + m02 * b21;\n\n  if (determinant !== 0) {\n    return ([\n\n      b01 / determinant, (-m22 * m01 + m02 * m21) / determinant, ( m12 * m01 - m02 * m11) / determinant,\n      b11 / determinant, ( m22 * m00 - m02 * m20) / determinant, (-m12 * m00 + m02 * m10) / determinant,\n      b21 / determinant, (-m21 * m00 + m01 * m20) / determinant, ( m11 * m00 - m01 * m10) / determinant,\n\n    ]);\n  }\n}\n\nexport function invert4(matrix) {\n  const m00 = matrix[ 0], m01 = matrix[ 1], m02 = matrix[ 2], m03 = matrix[ 3],\n        m10 = matrix[ 4], m11 = matrix[ 5], m12 = matrix[ 6], m13 = matrix[ 7],\n        m20 = matrix[ 8], m21 = matrix[ 9], m22 = matrix[10], m23 = matrix[11],\n        m30 = matrix[12], m31 = matrix[13], m32 = matrix[14], m33 = matrix[15],\n\n        b00 = m00 * m11 - m01 * m10,\n        b01 = m00 * m12 - m02 * m10,\n        b02 = m00 * m13 - m03 * m10,\n        b03 = m01 * m12 - m02 * m11,\n        b04 = m01 * m13 - m03 * m11,\n        b05 = m02 * m13 - m03 * m12,\n        b06 = m20 * m31 - m21 * m30,\n        b07 = m20 * m32 - m22 * m30,\n        b08 = m20 * m33 - m23 * m30,\n        b09 = m21 * m32 - m22 * m31,\n        b10 = m21 * m33 - m23 * m31,\n        b11 = m22 * m33 - m23 * m32,\n\n        determinant = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (determinant !== 0) {\n    return ([\n\n      (m11 * b11 - m12 * b10 + m13 * b09) / determinant, (m02 * b10 - m01 * b11 - m03 * b09) / determinant, (m31 * b05 - m32 * b04 + m33 * b03) / determinant, (m22 * b04 - m21 * b05 - m23 * b03) / determinant,\n      (m12 * b08 - m10 * b11 - m13 * b07) / determinant, (m00 * b11 - m02 * b08 + m03 * b07) / determinant, (m32 * b02 - m30 * b05 - m33 * b01) / determinant, (m20 * b05 - m22 * b02 + m23 * b01) / determinant,\n      (m10 * b10 - m11 * b08 + m13 * b06) / determinant, (m01 * b08 - m00 * b10 - m03 * b06) / determinant, (m30 * b04 - m31 * b02 + m33 * b00) / determinant, (m21 * b02 - m20 * b04 - m23 * b00) / determinant,\n      (m11 * b07 - m10 * b09 - m12 * b06) / determinant, (m00 * b09 - m01 * b07 + m02 * b06) / determinant, (m31 * b01 - m30 * b03 - m32 * b00) / determinant, (m20 * b03 - m21 * b01 + m22 * b00) / determinant,\n\n    ]);\n  }\n}\n\nexport function transpose2(matrix) {\n  return ([\n\n    matrix[0], matrix[2],\n    matrix[1], matrix[3],\n\n  ]);\n}\n\nexport function transpose3(matrix) {\n  return ([\n\n    matrix[0], matrix[3], matrix[6],\n    matrix[1], matrix[4], matrix[7],\n    matrix[2], matrix[5], matrix[8],\n\n  ]);\n}\n\nexport function transpose4(matrix) {\n  return ([\n\n    matrix[ 0], matrix[ 4], matrix[ 8], matrix[12],\n    matrix[ 1], matrix[ 5], matrix[ 9], matrix[13],\n    matrix[ 2], matrix[ 6], matrix[10], matrix[14],\n    matrix[ 3], matrix[ 7], matrix[11], matrix[15],\n\n  ]);\n}\n\nexport function scale4(matrix, vector) {\n  const x = vector[0],\n        y = vector[1],\n        z = vector[2];\n\n  return ([\n\n    matrix[ 0] * x, matrix[ 1] * x, matrix[ 2] * x, matrix[ 3] * x,\n    matrix[ 4] * y, matrix[ 5] * y, matrix[ 6] * y, matrix[ 7] * y,\n    matrix[ 8] * z, matrix[ 9] * z, matrix[10] * z, matrix[11] * z,\n    matrix[12] * 1, matrix[13] * 1, matrix[14] * 1, matrix[15] * 1,\n\n  ]);\n}\n\nexport function rotate4(matrix, angle, vector) {\n  let x = vector[0],\n      y = vector[1],\n      z = vector[2];\n\n  const length = Math.sqrt(x * x + y * y + z * z);\n\n  if (length !== 0) {\n    x /= length;\n    y /= length;\n    z /= length;\n\n    const s = Math.sin(angle),\n          c = Math.cos(angle),\n          t = 1 - c,\n\n          m00 = matrix[ 0],\n          m01 = matrix[ 1],\n          m02 = matrix[ 2],\n          m03 = matrix[ 3],\n          m10 = matrix[ 4],\n          m11 = matrix[ 5],\n          m12 = matrix[ 6],\n          m13 = matrix[ 7],\n          m20 = matrix[ 8],\n          m21 = matrix[ 9],\n          m22 = matrix[10],\n          m23 = matrix[11],\n\n          b00 = x * x * t + c,\n          b01 = y * x * t + z * s,\n          b02 = z * x * t - y * s,\n          b10 = x * y * t - z * s,\n          b11 = y * y * t + c,\n          b12 = z * y * t + x * s,\n          b20 = x * z * t + y * s,\n          b21 = y * z * t - x * s,\n          b22 = z * z * t + c;\n\n    return ([\n\n      m00 * b00 + m10 * b01 + m20 * b02, m01 * b00 + m11 * b01 + m21 * b02, m02 * b00 + m12 * b01 + m22 * b02, m03 * b00 + m13 * b01 + m23 * b02,\n      m00 * b10 + m10 * b11 + m20 * b12, m01 * b10 + m11 * b11 + m21 * b12, m02 * b10 + m12 * b11 + m22 * b12, m03 * b10 + m13 * b11 + m23 * b12,\n      m00 * b20 + m10 * b21 + m20 * b22, m01 * b20 + m11 * b21 + m21 * b22, m02 * b20 + m12 * b21 + m22 * b22, m03 * b20 + m13 * b21 + m23 * b22,\n                             matrix[12],                        matrix[13],                        matrix[14],                        matrix[15],\n\n    ]);\n  }\n}\n\nexport function translate4(matrix, vector) {\n  const x = vector[0],\n        y = vector[1],\n        z = vector[2],\n\n        m00 = matrix[ 0],\n        m01 = matrix[ 1],\n        m02 = matrix[ 2],\n        m03 = matrix[ 3],\n        m10 = matrix[ 4],\n        m11 = matrix[ 5],\n        m12 = matrix[ 6],\n        m13 = matrix[ 7],\n        m20 = matrix[ 8],\n        m21 = matrix[ 9],\n        m22 = matrix[10],\n        m23 = matrix[11];\n\n  return ([\n\n                                         m00,                                      m01,                                      m02,                                      m03,\n                                         m10,                                      m11,                                      m12,                                      m13,\n                                         m20,                                      m21,                                      m22,                                      m23,\n    m00 * x + m10 * y + m20 * z + matrix[12], m01 * x + m11 * y + m21 * z + matrix[13], m02 * x + m12 * y + m22 * z + matrix[14], m03 * x + m13 * y + m23 * z + matrix[15],\n\n  ]);\n}\n\nexport function perspective4(fieldOfView, aspectRatio, zNear, zFar) {\n  const f = 1.0 / Math.tan(fieldOfView / 2),\n        nf = 1 / (zNear - zFar);\n\n  return ([\n\n    f / aspectRatio, 0, 0,                       0,\n    0,               f, 0,                       0,\n    0,               0, (zFar + zNear) * nf,    -1,\n    0,               0, (2 * zFar * zNear) * nf, 0,\n\n  ]);\n}\n", "\"use strict\";\n\nexport function zero2() {\n  return ([\n\n    0,\n    0,\n\n  ]);\n}\n\nexport function zero3() {\n  return ([\n\n    0,\n    0,\n    0,\n\n  ]);\n}\n\nexport function zero4() {\n  return ([\n\n    0,\n    0,\n    0,\n    0,\n\n  ]);\n}\n\nexport function length2(vector) {\n  const x = vector[0],\n        y = vector[1];\n\n  return Math.sqrt(x*x + y*y);\n}\n\nexport function length3(vector) {\n  const x = vector[0],\n        y = vector[1],\n        z = vector[2];\n\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\nexport function length4(vector) {\n  const x = vector[0],\n        y = vector[1],\n        z = vector[2],\n        w = vector[3];\n\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\nexport function dot2(vectorA, vectorB) { return (vectorA[0] * vectorB[0] + vectorA[1] * vectorB[1]); }\n\nexport function dot3(vectorA, vectorB) { return (vectorA[0] * vectorB[0] + vectorA[1] * vectorB[1] + vectorA[2] * vectorB[2]); }\n\nexport function dot4(vectorA, vectorB) { return (vectorA[0] * vectorB[0] + vectorA[1] * vectorB[1] + vectorA[2] * vectorB[2] + vectorA[3] * vectorB[3]); }\n\nexport function cross3(vectorA, vectorB) {\n  const ax = vectorA[0], ay = vectorA[1], az = vectorA[2],\n        bx = vectorB[0], by = vectorB[1], bz = vectorB[2];\n\n  return ([\n\n    ay * bz - az * by,\n    az * bx - ax * bz,\n    ax * by - ay * bx,\n\n  ])\n}\n\nexport function normalise2(vector) {\n  const x = vector[0],\n        y = vector[1],\n        length = Math.sqrt(x*x + y*y);\n\n  if (length > 0) {\n    return ([\n\n      x / length,\n      y / length,\n\n    ]);\n  }\n}\n\nexport function normalise3(vector) {\n  const x = vector[0],\n        y = vector[1],\n        z = vector[2],\n        length = Math.sqrt(x*x + y*y + z*z);\n\n  if (length > 0) {\n    return ([\n\n      x / length,\n      y / length,\n      z / length,\n\n    ]);\n  }\n}\n\nexport function normalise4(vector) {\n  const x = vector[0],\n        y = vector[1],\n        z = vector[2],\n        w = vector[3],\n        length = Math.sqrt(x*x + y*y + z*z + w*w);\n\n  if (length > 0) {\n    return ([\n\n      x / length,\n      y / length,\n      z / length,\n      w / length,\n\n    ]);\n  }\n}\n\nexport function reflect2(vector) {\n  return ([\n\n    vector[0] * -1,\n    vector[1] * -1,\n\n  ]);\n}\n\nexport function reflect3(vector) {\n  return ([\n\n    vector[0] * -1,\n    vector[1] * -1,\n    vector[2] * -1,\n\n  ]);\n}\n\nexport function reflect4(vector) {\n  return ([\n\n    vector[0] * -1,\n    vector[1] * -1,\n    vector[2] * -1,\n    vector[3] * -1,\n\n  ]);\n}\n\nexport function scale2(vector, scalar) {\n  return ([\n\n    vector[0] * scalar,\n    vector[1] * scalar,\n\n  ]);\n}\n\nexport function scale3(vector, scalar) {\n  return ([\n\n    vector[0] * scalar,\n    vector[1] * scalar,\n    vector[2] * scalar,\n\n  ]);\n}\n\nexport function scale4(vector, scalar) {\n  return ([\n\n    vector[0] * scalar,\n    vector[1] * scalar,\n    vector[2] * scalar,\n    vector[3] * scalar,\n\n  ]);\n}\n\nexport function add2(vectorA, vectorB) {\n  return ([\n\n    vectorA[0] + vectorB[0],\n    vectorA[1] + vectorB[1],\n\n  ]);\n}\n\nexport function add3(vectorA, vectorB) {\n  return ([\n\n    vectorA[0] + vectorB[0],\n    vectorA[1] + vectorB[1],\n    vectorA[2] + vectorB[2],\n\n  ]);\n}\n\nexport function add4(vectorA, vectorB) {\n  return ([\n\n    vectorA[0] + vectorB[0],\n    vectorA[1] + vectorB[1],\n    vectorA[2] + vectorB[2],\n    vectorA[3] + vectorB[3],\n\n  ]);\n}\n\nexport function subtract2(vectorA, vectorB) {\n  return ([\n\n    vectorA[0] - vectorB[0],\n    vectorA[1] - vectorB[1],\n\n  ]);\n}\n\nexport function subtract3(vectorA, vectorB) {\n  return ([\n\n    vectorA[0] - vectorB[0],\n    vectorA[1] - vectorB[1],\n    vectorA[2] - vectorB[2],\n\n  ]);\n}\n\nexport function subtract4(vectorA, vectorB) {\n  return ([\n\n    vectorA[0] - vectorB[0],\n    vectorA[1] - vectorB[1],\n    vectorA[2] - vectorB[2],\n    vectorA[3] - vectorB[3],\n\n  ]);\n}\n\nexport function multiply2(vectorA, vectorB) {\n  return ([\n\n    vectorA[0] * vectorB[0],\n    vectorA[1] * vectorB[1],\n\n  ]);\n}\n\nexport function multiply3(vectorA, vectorB) {\n  return ([\n\n    vectorA[0] * vectorB[0],\n    vectorA[1] * vectorB[1],\n    vectorA[2] * vectorB[2],\n\n  ]);\n}\n\nexport function multiply4(vectorA, vectorB) {\n  return ([\n\n    vectorA[0] * vectorB[0],\n    vectorA[1] * vectorB[1],\n    vectorA[2] * vectorB[2],\n    vectorA[3] * vectorB[3],\n\n  ]);\n}\n\nexport function transform2(vector, matrix) {\n  const x = vector[0],\n        y = vector[1];\n\n  return ([\n\n    matrix[0] * x + matrix[2] * y,\n    matrix[1] * x + matrix[3] * y,\n\n  ]);\n}\n\nexport function transform3(vector, matrix) {\n  const x = vector[0],\n        y = vector[1],\n        z = vector[2];\n\n  return ([\n\n    matrix[0] * x + matrix[3] * y + matrix[6] * z,\n    matrix[1] * x + matrix[4] * y + matrix[7] * z,\n    matrix[2] * x + matrix[5] * y + matrix[8] * z,\n\n  ]);\n}\n\nexport function transform4(vector, matrix) {\n  const x = vector[0],\n        y = vector[1],\n        z = vector[2],\n        w = vector[3];\n\n  return ([\n\n    matrix[ 0] * x + matrix[ 4] * y + matrix[ 8] * z + matrix[12] * w,\n    matrix[ 1] * x + matrix[ 5] * y + matrix[ 9] * z + matrix[13] * w,\n    matrix[ 2] * x + matrix[ 6] * y + matrix[10] * z + matrix[14] * w,\n    matrix[ 3] * x + matrix[ 7] * y + matrix[11] * z + matrix[15] * w,\n\n  ]);\n}\n", "\"use strict\";\n\nexport const TRACE = \"TRACE\";\nexport const DEBUG = \"DEBUG\";\nexport const INFO = \"INFO\";\nexport const WARNING = \"WARNING\";\nexport const ERROR = \"ERROR\";\nexport const FATAL = \"FATAL\";\nexport const DEFAULT_LOG_LEVEL = WARNING; ///\nexport const DEFAULT_LOG_DIRECTORY_PATH = null;\nexport const DEFAULT_LOG_FILE_BASE_NAME = \"default\";\n\nexport const GET = \"GET\";\nexport const POST = \"POST\";\nexport const ACCEPT = \"accept\";\nexport const CONTENT_TYPE = \"content-type\";\nexport const APPLICATION_JSON = \"application/json\";\n\nexport const CTRL_C = \"^C\";\nexport const DATA_EVENT = \"data\";\nexport const UTF8_ENCODING = \"utf8\";\nexport const ETX_CHARACTER = \"\\u0003\";\nexport const DEFAULT_ATTEMPTS = 3;\nexport const DEFAULT_ENCODING = UTF8_ENCODING;\nexport const LINE_FEED_CHARACTER = \"\\n\";\nexport const BACKSPACE_CHARACTER = String.fromCharCode(127);\nexport const DEFAULT_INITIAL_ANSWER = \"\";\nexport const CARRIAGE_RETURN_CHARACTER = \"\\r\";\n\nexport const DEFAULT_RC_BASE_EXTENSION = \"\";\n", "\"use strict\";\n\nimport { GET,\n         POST,\n         ACCEPT,\n         CONTENT_TYPE,\n         APPLICATION_JSON } from \"../constants\";\n\nexport function get(host, uri, parameters, headers, callback) {\n  if (callback === undefined) {\n    callback = headers; ///\n    headers = {};\n  }\n\n  const method = GET,\n        body = null;\n\n  guaranteeAccept(headers);\n\n  request(host, uri, parameters, method, body, headers, callback);\n}\n\nexport function post(host, uri, parameters, body, headers, callback) {\n  if (callback === undefined) {\n    callback = headers; ///\n    headers = {};\n  }\n\n  const method = POST;\n\n  guaranteeAccept(headers);\n\n  guaranteeContentType(headers);\n\n  request(host, uri, parameters, method, body, headers, callback);\n}\n\nexport function request(host, uri, parameters, method, body, headers, callback) {\n  const url = urlFromHostURIAndParameters(host, uri, parameters),\n        accept = headers[ACCEPT] || null,\n        contentType = headers[CONTENT_TYPE] || null,\n        xmlHttpRequest = new XMLHttpRequest();\n\n  if (contentType === APPLICATION_JSON) {\n    const json = body,  ///\n          jsonString = JSON.stringify(json);\n\n    body = jsonString;  ///\n  }\n\n  xmlHttpRequest.onreadystatechange = () => {\n    const { readyState, status, responseText } = xmlHttpRequest;\n\n    if (readyState == 4) {\n      let body = responseText;\n\n      if (accept === APPLICATION_JSON) {\n        try {\n          const jsonString = body,  ///\n                json = JSON.parse(jsonString);\n\n          body = json;  ///\n        } catch (error) {\n          body = null;\n        }\n\n        callback(body, status);\n      }\n    }\n  };\n\n  xmlHttpRequest.open(method, url);\n\n  if (accept !== null) {\n    xmlHttpRequest.setRequestHeader(ACCEPT, accept);\n  }\n\n  if (contentType !== null) {\n    xmlHttpRequest.setRequestHeader(CONTENT_TYPE, contentType);\n  }\n\n  (body !== null) ?\n    xmlHttpRequest.send(body) :\n      xmlHttpRequest.send();\n}\n\nexport default {\n  get,\n  post,\n  request\n}\n\nfunction guarantee(headers, name, value) {\n  const propertyNames = Object.getOwnPropertyNames(headers),\n        names = propertyNames.map((propertyName) => {\n          const lowerCasePropertyName = propertyName.toLowerCase(),\n                name = lowerCasePropertyName; ///\n\n          return name;\n        }),\n        namesIncludesName = names.includes(name);\n\n  if (!namesIncludesName) {\n    headers[name] = value;\n  }\n}\n\nfunction guaranteeAccept(headers) {\n  const name = ACCEPT,  ///\n        value = APPLICATION_JSON; ///\n\n  guarantee(headers, name, value);\n}\n\nfunction guaranteeContentType(headers) {\n  const name = CONTENT_TYPE,  ///\n        value = APPLICATION_JSON; ///\n\n  guarantee(headers, name, value);\n}\n\nfunction queryStringFromParameters(parameters) {\n  const names = Object.keys(parameters),\n        namesLength = names.length,\n        lastIndex = namesLength - 1,\n        queryString = names.reduce((queryString, name, index) => {\n          const value = parameters[name],\n                encodedName = encodeURIComponent(name),\n                encodedValue = encodeURIComponent(value),\n                ampersandOrNothing = (index !== lastIndex) ? \"&\" : \"\";\n  \n          queryString += `${encodedName}=${encodedValue}${ampersandOrNothing}`;\n  \n          return queryString;\n        }, \"\");\n\n  return queryString;\n}\n\nfunction urlFromHostURIAndParameters(host, uri, parameters) {\n  const queryString = queryStringFromParameters(parameters),\n        url = (queryString === \"\") ?\n              `${host}${uri}` :\n                `${host}${uri}?${queryString}`;\n\n  return url;\n}\n", "\"use strict\";\n\nexport function first(array) { return array[0];}\n\nexport function second(array) { return array[1]; }\n\nexport function third(array) { return array[2]; }\n\nexport function fourth(array) { return array[3]; }\n\nexport function fifth(array) { return array[4]; }\n\nexport function fifthLast(array) { return array[array.length - 5]; }\n\nexport function fourthLast(array) { return array[array.length - 4]; }\n\nexport function thirdLast(array) { return array[array.length - 3]; }\n\nexport function secondLast(array) { return array[array.length - 2]; }\n\nexport function last(array) { return array[array.length - 1]; }\n\nexport function head(array) { return array.slice(0, 1); }\n\nexport function tail(array) { return array.slice(1); }\n\nexport function push(array1, array2) { Array.prototype.push.apply(array1, array2); }\n\nexport function unshift(array1, array2) { Array.prototype.unshift.apply(array1, array2); }\n\nexport function concat(array1, elementOrArray2) {\n  const array2 = (elementOrArray2 instanceof Array) ?\n                    elementOrArray2 :\n                     [elementOrArray2];\n  \n  push(array1, array2);\n}\n\nexport function clear(array) {\n  const start = 0;\n  \n  return array.splice(start);\n}\n\nexport function copy(array1, array2) {\n  const start = 0,\n        deleteCount = array2.length;  ///\n  \n  splice(array1, start, deleteCount, array2);\n}\n\nexport function merge(array1, array2) { Array.prototype.push.apply(array1, array2); }\n\nexport function splice(array1, start, deleteCount = Infinity, array2 = []) {\n  const args = [start, deleteCount, ...array2],\n        deletedItemsArray = Array.prototype.splice.apply(array1, args);\n\n  return deletedItemsArray;\n}\n\nexport function replace(array, element, test) {\n  let start;\n  \n  const found = array.some((element, index) => {\n    const passed = test(element, index);\n\n    if (passed) {\n      start = index;  ///\n      \n      return true;\n    }\n  });\n  \n  if (found) {\n    const deleteCount = 1;\n\n    array.splice(start, deleteCount, element);\n  }\n\n  return found;\n}\n\nexport function filter(array, test) {\n  const filteredElements = [];\n  \n  backwardsForEach(array, (element, index) => {\n    const passed = test(element, index);\n\n    if (!passed) {\n      const start = index,  ///\n            deleteCount = 1,\n            deletedElements = array.splice(start, deleteCount),\n            firstDeletedElement = first(deletedElements);\n      \n      filteredElements.unshift(firstDeletedElement);  ///\n    }\n  });\n  \n  return filteredElements;\n}\n\nexport function find(array, test) {\n  const elements = [];\n\n  forwardsForEach(array, (element, index) => {\n    const passed = test(element, index);\n\n    if (passed) {\n      elements.push(element);\n    }\n  });\n\n  return elements;\n}\n\nexport function prune(array, test) {\n  let prunedElement = undefined;\n  \n  array.some((element, index) => {\n    const passed = test(element, index);\n\n    if (!passed) {\n      const start = index,  ///\n            deleteCount = 1,\n            deletedElements = array.splice(start, deleteCount),\n            firstDeletedElement = first(deletedElements);\n      \n      prunedElement = firstDeletedElement;  ///\n\n      return true;\n    }\n  });\n  \n  return prunedElement;\n}\n\nexport function patch(array, element, test) {\n  const found = array.some((element, index) => {\n    const passed = test(element, index);\n\n    if (passed) {\n      return true;\n    }\n  });\n\n\n  if (found) {\n    array.push(element);\n  }\n\n  return found;\n}\n\nexport function augment(array1, array2, test) {\n  array2.forEach((element, index) => {\n    const passed = test(element, index);\n\n    if (passed) {\n      array1.push(element);\n    }\n  });\n}\n\nexport function separate(array, array1, array2, test) {\n  array.forEach((element, index) => {\n    const passed = test(element, index);\n\n    passed ?\n      array1.push(element) :\n        array2.push(element);\n  });\n}\n\nexport function forwardsSome(array, callback) {\n  const arrayLength = array.length;\n\n  for (let index = 0; index < arrayLength; index++) {\n    const element = array[index],\n          result = callback(element, index);\n    \n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function backwardsSome(array, callback) {\n  const arrayLength = array.length;\n\n  for (let index = arrayLength - 1; index >= 0; index--) {\n    const element = array[index],\n          result = callback(element, index);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function forwardsEvery(array, callback) {\n  const arrayLength = array.length;\n\n  for (let index = 0; index < arrayLength; index++) {\n    const element = array[index],\n          result = callback(element, index);\n\n    if (!result) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function backwardsEvery(array, callback) {\n  const arrayLength = array.length;\n\n  for (let index = arrayLength - 1; index >= 0; index--) {\n    const element = array[index],\n          result = callback(element, index);\n\n    if (!result) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function forwardsReduce(array, callback, initialValue) {\n  let value = initialValue;\n\n  forwardsForEach(array, (element, index) => {\n    value = callback(value, element, index);\n  });\n\n  return value;\n}\n\nexport function backwardsReduce(array, callback, initialValue) {\n  let value = initialValue;\n\n  backwardsForEach(array, (element, index) => {\n    value = callback(value, element, index);\n  });\n\n  return value;\n}\n\nexport function forwardsForEach(array, callback) {\n  const arrayLength = array.length;\n\n  for (let index = 0; index < arrayLength; index++) {\n    const element = array[index];\n\n    callback(element, index);\n  }\n}\n\nexport function backwardsForEach(array, callback) {\n  const arrayLength = array.length;\n\n  for (let index = arrayLength - 1; index >= 0; index--) {\n    const element = array[index];\n\n    callback(element, index);\n  }\n}\n\nexport default {\n  first,\n  second,\n  third,\n  fourth,\n  fifth,\n  fifthLast,\n  fourthLast,\n  thirdLast,\n  secondLast,\n  last,\n  head,\n  tail,\n  push,\n  unshift,\n  concat,\n  clear,\n  copy,\n  merge,\n  splice,\n  replace,\n  filter,\n  find,\n  prune,\n  patch,\n  augment,\n  separate,\n  forwardsSome,\n  backwardsSome,\n  forwardsEvery,\n  backwardsEvery,\n  forwardsReduce,\n  backwardsReduce,\n  forwardsForEach,\n  backwardsForEach\n};\n", "\"use strict\";\n\nimport { first, second, last } from \"../utilities/array\";\n\nexport function isPathName(path) {\n  path = path.replace(/^\\//,\"\").replace(/\\/$/, \"\"); ///\n\n  const pathName = (/\\//.test(path) === false);\n\n  return pathName;\n}\n\nexport function isPathTopmostName(path) {\n  const pathName = isPathName(path),\n        pathAbsolutePath = isPathAbsolutePath(path),\n        pathTopmostName = (pathName && pathAbsolutePath);\n\n  return pathTopmostName;\n}\n\nexport function isPathRelativePath(path) {\n  const pathRelativePath = !/^\\//.test(path);\n\n  return pathRelativePath;\n}\n\nexport function isPathAbsolutePath(path) {\n  const pathAbsolutePath = /^\\//.test(path);\n\n  return pathAbsolutePath;\n}\n\nexport function isTopmostNameInAbsolutePath(topmostName, absolutePath) {\n  const regExp = new RegExp(`^${topmostName}(?:\\\\/.+)?$`),\n        topmostNameInAbsolutePath = regExp.test(absolutePath);\n\n  return topmostNameInAbsolutePath\n}\n\nexport function combinePaths(path, relativePath) {\n  let combinedPath = null;\n\n  const pathNames = path.split(/\\//),\n        relativePathNames = relativePath.split(/\\//);\n\n  let lastPathName,\n      firstRelativePathName = first(relativePathNames);\n\n  if (firstRelativePathName === \".\") {\n    relativePathNames.shift();\n  }\n\n  firstRelativePathName = first(relativePathNames);\n  lastPathName = last(pathNames);\n\n  while ((firstRelativePathName === \"..\") && (lastPathName !== undefined)) {\n    relativePathNames.shift();\n    pathNames.pop();\n\n    firstRelativePathName = first(relativePathNames);\n    lastPathName = last(pathNames);\n  }\n\n  if (lastPathName !== undefined) {\n    const combinedPathNames = [].concat(pathNames).concat(relativePathNames);\n\n    combinedPath = combinedPathNames.join(\"/\");\n  }\n\n  return combinedPath;\n}\n\nexport function concatenatePaths(path, relativePath) {\n  path = path.replace(/\\/$/, \"\");  ///\n\n  const concatenatedPath = `${path}/${relativePath}`;\n\n  return concatenatedPath;\n}\n\nexport function bottommostNameFromPath(path) {\n  let bottommostName = null;\n\n  const matches = path.match(/^.*\\/([^\\/]+\\/?)$/);\n\n  if (matches !== null) {\n    const secondMatch = second(matches);\n\n    bottommostName = secondMatch;  ///\n  }\n\n  return bottommostName;\n}\n\nexport function topmostDirectoryPathFromPath(path) {\n  const matches = path.match(/^(.+)\\/[^\\/]+\\/?$/),\n        secondMatch = second(matches),\n        topmostDirectoryPath = secondMatch; ///\n\n  return topmostDirectoryPath;\n}\n\nexport function topmostDirectoryNameFromPath(path) {\n  let topmostDirectoryName = null;\n\n  const matches = path.match(/^([^\\/]+)\\/.+$/);\n\n  if (matches !== null) {\n    const secondMatch = second(matches);\n\n    topmostDirectoryName = secondMatch;  ///\n  }\n\n  return topmostDirectoryName;\n}\n\nexport function pathWithoutBottommostNameFromPath(path) {\n  let pathWithoutBottommostName = null;\n\n  const matches = path.match(/^(.*)\\/[^\\/]+\\/?$/);\n\n  if (matches !== null) {\n    const secondMatch = second(matches);\n\n    pathWithoutBottommostName = secondMatch; ///\n  }\n\n  return pathWithoutBottommostName;\n}\n\nexport function pathWithoutTopmostDirectoryNameFromPath(path) {\n  let pathWithoutTopmostDirectoryName = null;\n\n  const matches = path.match(/^[^\\/]+\\/(.+)$/);\n\n  if (matches !== null) {\n    const secondMatch = second(matches);\n\n    pathWithoutTopmostDirectoryName = secondMatch;\n  }\n\n  return pathWithoutTopmostDirectoryName;\n}\n\nexport default {\n  isPathName,\n  isPathTopmostName,\n  isPathRelativePath,\n  isPathAbsolutePath,\n  isTopmostNameInAbsolutePath,\n  combinePaths,\n  concatenatePaths,\n  bottommostNameFromPath,\n  topmostDirectoryPathFromPath,\n  topmostDirectoryNameFromPath,\n  pathWithoutBottommostNameFromPath,\n  pathWithoutTopmostDirectoryNameFromPath\n};\n", "\"use strict\";\r\n\r\nexport function whilst(callback, done, context) {\r\n  let count = -1;\r\n\r\n  function next() {\r\n    count++;\r\n\r\n    const index = count,  ///\r\n          terminate = callback(next, done, context, index);\r\n\r\n    if (terminate) {\r\n      done();\r\n    }\r\n  }\r\n\r\n  next();\r\n}\r\n\r\nexport function forEach(array, callback, done, context) {\r\n  const length = array.length;  ///\r\n\r\n  let count = -1;\r\n\r\n  function next() {\r\n    count++;\r\n\r\n    const terminate = (count === length);\r\n\r\n    if (terminate) {\r\n      done();\r\n    } else {\r\n      const index = count,  ///\r\n            element = array[index];\r\n\r\n      callback(element, next, done, context, index);\r\n    }\r\n  }\r\n\r\n  next();\r\n}\r\n\r\nexport function sequence(callbacks, done, context) {\r\n  const length = callbacks.length;  ///\r\n\r\n  let count = -1;\r\n\r\n  function next() {\r\n    count++;\r\n\r\n    const terminate = (count === length);\r\n\r\n    if (terminate) {\r\n      done();\r\n    } else {\r\n      const index = count,  ///\r\n            callback = callbacks[index];\r\n\r\n      callback(next, done, context, index);\r\n    }\r\n  }\r\n\r\n  next();\r\n}\r\n\r\nexport function eventually(callbacks, done, context) {\r\n  const length = callbacks.length;  ///\r\n\r\n  let count = 0;\r\n\r\n  function next() {\r\n    count++;\r\n\r\n    const terminate = (count === length);\r\n\r\n    if (terminate) {\r\n      done();\r\n    }\r\n  }\r\n\r\n  callbacks.forEach((callback, index) => {\r\n    callback(next, done, context, index);\r\n  });\r\n}\r\n\r\nexport function repeatedly(callback, length, done, context) {\r\n  let count = 0;\r\n\r\n  function next() {\r\n    count++;\r\n\r\n    const terminate = (count === length);\r\n\r\n    if (terminate) {\r\n      done();\r\n    }\r\n  }\r\n\r\n  for (let index = 0; index < length; index++) {\r\n    callback(next, done, context, index);\r\n  }\r\n}\r\n\r\nexport function forwardsForEach(array, callback, done, context) {\r\n  const length = array.length;  ///\r\n\r\n  let count = -1;\r\n\r\n  function next() {\r\n    count++;\r\n\r\n    const terminate = (count === length);\r\n\r\n    if (terminate) {\r\n      done();\r\n    } else {\r\n      const index = count,  ///\r\n            element = array[index];\r\n\r\n      callback(element, next, done, context, index);\r\n    }\r\n  }\r\n\r\n  next();\r\n}\r\n\r\nexport function backwardsForEach(array, callback, done, context) {\r\n  const length = array.length;  ///\r\n\r\n  let count = length;\r\n\r\n  function next() {\r\n    count--;\r\n\r\n    const terminate = (count === -1);\r\n\r\n    if (terminate) {\r\n      done();\r\n    } else {\r\n      const index = count,  ///\r\n            element = array[index];\r\n\r\n      callback(element, next, done, context, index);\r\n    }\r\n  }\r\n\r\n  next();\r\n}\r\n\r\nexport default {\r\n  whilst,\r\n  forEach,\r\n  sequence,\r\n  eventually,\r\n  repeatedly,\r\n  forwardsForEach,\r\n  backwardsForEach\r\n};\r\n", "\"use strict\";\n\nexport { default as ajaxUtilities } from \"./utilities/ajax\";\n\nexport { default as pathUtilities } from \"./utilities/path\";\nexport { default as arrayUtilities } from \"./utilities/array\";\nexport { default as asynchronousUtilities } from \"./utilities/asynchronous\";\n", "\"use strict\";\n\nimport { arrayUtilities } from \"necessary\";\n\nexport const { first, second, third, fourth, push, merge, separate } = arrayUtilities;\n\nexport function permute(array, places) {\n  const length = array.length,\n        cut = length - places,\n        leadingElements = array.slice(0, cut),\n        trailingElements = array.slice(cut);\n\n  array = [ ...trailingElements, ...leadingElements ];\n\n  return array;\n}\n\nexport function flatten(arrays) {\n  return arrays.reduce((elements, array) => elements.concat(array), []);\n}\n\nexport function guarantee(arrayOrElement) {\n  arrayOrElement = arrayOrElement || [];\n\n  return (arrayOrElement instanceof Array) ?\n           arrayOrElement :\n            [arrayOrElement];\n}\n", "\"use strict\";\n\nexport const Z_FAR = 1000;\nexport const Z_NEAR = 1;\nexport const MOUSE_UP = \"MOUSE_UP\";\nexport const MOUSE_DOWN = \"MOUSE_DOWN\";\nexport const MOUSE_MOVE = \"MOUSE_MOVE\";\nexport const MOUSE_WHEEL = \"MOUSE_WHEEL\";\nexport const DELTA_SCALAR = 1.25;\nexport const INVERT_SCALAR = -1;\nexport const ANGLES_SCALAR = 0.01;\nexport const OFFSET_SCALAR = 0.25;\nexport const SHIFT_KEY_CODE = 16;\nexport const VERTICES_LENGTH = 3;\nexport const MINIMUM_DISTANCE = 1;\nexport const DEFAULT_MARGIN_OF_ERROR = 0.0000001;\nexport const DEGREES_TO_RADIANS_SCALAR = Math.PI / 180;\nexport const FIELD_OF_VIEW = 45 * DEGREES_TO_RADIANS_SCALAR;\n", "\"use strict\";\n\nimport { scale3 } from \"../maths/vector\";\nimport { first, second, third } from \"../utilities/array\";\nimport { DEGREES_TO_RADIANS_SCALAR, FIELD_OF_VIEW, Z_NEAR, Z_FAR } from \"../constants\";\nimport { identity4, scale4, invert4, rotate4, translate4, transpose4, perspective4 } from \"../maths/matrix\";\n\nexport function scaleMatrixFromScale(scale) {\n  let scaleMatrix = identity4();\n\n  scaleMatrix = scale4(scaleMatrix, scale);\n\n  return scaleMatrix;\n}\n\nexport function offsetsMatrixFromOffsets(offsets) {\n  let offsetsMatrix = identity4(); ///\n\n  offsetsMatrix = translate4(offsetsMatrix, offsets);\n\n  return offsetsMatrix;\n}\n\nexport function positionMatrixFromNothing() {\n  let positionMatrix = identity4(); ///\n\n  return positionMatrix;\n}\n\nexport function positionMatrixFromDistance(distance) {\n  let positionMatrix = identity4(); ///\n\n  const x = 0,\n        y = 0,\n        z = -distance;\n\n  positionMatrix = translate4(positionMatrix, [ x, y, z ]);\n\n  return positionMatrix;\n}\n\nexport function positionMatrixFromPosition(position) {\n  let positionMatrix = identity4(); ///\n\n  positionMatrix = translate4(positionMatrix, position);\n\n  return positionMatrix;\n}\n\nexport function rotationsMatrixFromAngles(angles, reverseOrder = false) {\n  let rotationsMatrix = identity4(); ///\n\n  const firstAngle = first(angles),\n        secondAngle = second(angles),\n        thirdAngle = third(angles),\n        xAngle = firstAngle,\n        yAngle = secondAngle,\n        zAngle = thirdAngle,\n        xAxis = [ 1, 0, 0 ],\n        yAxis = [ 0, 1, 0 ],\n        zAxis = [ 0, 0, 1 ];\n\n  if (reverseOrder) {\n    rotationsMatrix = rotate4(rotationsMatrix, zAngle, zAxis);\n\n    rotationsMatrix = rotate4(rotationsMatrix, yAngle, yAxis);\n\n    rotationsMatrix = rotate4(rotationsMatrix, xAngle, xAxis);\n  } else {\n    rotationsMatrix = rotate4(rotationsMatrix, xAngle, xAxis);\n\n    rotationsMatrix = rotate4(rotationsMatrix, yAngle, yAxis);\n\n    rotationsMatrix = rotate4(rotationsMatrix, zAngle, zAxis);\n  }\n\n  return rotationsMatrix;\n}\n\nexport function rotationsMatrixFromRotations(rotations) {\n  const scalar = DEGREES_TO_RADIANS_SCALAR,\n        angles = scale3(rotations, scalar),\n        rotationsMatrix = rotationsMatrixFromAngles(angles);\n\n  return rotationsMatrix;\n}\n\nexport function normalsMatrixFromRotationsMatrix(rotationsMatrix) {\n  let normalsMatrix = invert4(rotationsMatrix);\n\n  normalsMatrix = transpose4(normalsMatrix);\n\n  return normalsMatrix;\n}\n\nexport function projectionMatrixFromWidthAndHeight(width, height) {\n  const fieldOfView = FIELD_OF_VIEW,  ///\n        aspectRatio = width / height,\n        zNear = Z_NEAR, ///\n        zFar = Z_FAR, ///\n        projectionMatrix = perspective4(fieldOfView, aspectRatio, zNear, zFar);\n\n  return projectionMatrix;\n}\n", "\"use strict\";\n\nimport { multiply4 } from \"../maths/matrix\";\nimport { transform4 } from \"../maths/vector\";\nimport { scaleMatrixFromScale, positionMatrixFromPosition, rotationsMatrixFromRotations } from \"../utilities/matrix\";\n\nexport function composeTransform(scale, rotations, position) {\n  let matrix = null;\n\n  if (scale !== null) {\n    const scaleMatrix = scaleMatrixFromScale(scale);\n\n    matrix = (matrix === null) ?\n               scaleMatrix :\n                 multiply4(scaleMatrix, matrix);\n  }\n\n  if (rotations !== null) {\n    const rotationsMatrix = rotationsMatrixFromRotations(rotations);\n\n    matrix = (matrix === null) ?\n               rotationsMatrix :\n                 multiply4(rotationsMatrix, matrix);\n\n  }\n\n  if (position !== null) {\n    const positionMatrix = positionMatrixFromPosition(position);\n\n    matrix = (matrix === null) ?\n                positionMatrix :\n                  multiply4(positionMatrix, matrix);\n  }\n\n  const transform = (matrix === null) ?\n                      (vector) => vector :\n                        (vector) => transform4([ ...vector, 1 ], matrix).slice(0, 3);\n\n  return transform;\n}\n", "\"use strict\";\n\nimport Element from \"../element\";\n\nimport { composeTransform } from \"../utilities/transform\";\n\nexport default class CanvasElement extends Element {\n  constructor(transform, facets, mask, hidden) {\n    super();\n\n    this.transform = transform;\n    this.facets = facets;\n    this.mask = mask;\n\n    this.hidden = hidden;\n  }\n\n  getTransform() {\n    return this.transform;\n  }\n\n  getFacets() {\n    return this.facets;\n  }\n\n  getMask() {\n    return this.mask;\n  }\n\n  setFacets(facets) {\n    this.facets = facets;\n  }\n\n  applyMask(mask) {\n    if (mask) {\n      const element = this; ///\n\n      mask.maskElement(element);\n    }\n  }\n\n  applyTransform(transform) {\n    const childElements = this.getChildElements();\n\n    this.facets.forEach((facet) => facet.applyTransform(transform));\n\n    childElements.forEach((childElement) => childElement.applyTransform(transform));\n  }\n\n  createFacets(hidden) {\n    const childElements = this.getChildElements();\n\n    hidden = hidden || this.hidden; ///\n\n    childElements.forEach((childElement) => childElement.createFacets(hidden));\n\n    return hidden;\n  }\n\n  amendFacets() {\n    const childElements = this.getChildElements();\n\n    childElements.forEach((childElement) => childElement.amendFacets());\n\n    this.applyTransform(this.transform);\n\n    this.applyMask(this.mask);\n  }\n\n  addFacets(colourRenderer, textureRenderer) {\n    const childElements = this.getChildElements();\n\n    childElements.forEach((childElement) => childElement.addFacets(colourRenderer, textureRenderer));\n  }\n\n  static fromProperties(Class, properties, ...remainingArguments) {\n    const { scale = null, rotations = null, position = null, mask = null, hidden = false } = properties,\n          transform = composeTransform(scale, rotations, position),\n          facets = [],\n          canvasElement = Element.fromProperties(Class, properties, transform, facets, mask, hidden, ...remainingArguments);\n\n    return canvasElement;\n  }\n}\n", "\"use strict\";\n\nimport CanvasElement from \"../../element/canvas\";\n\nexport default class FunctionCanvasElement extends CanvasElement {\n  static fromProperties(properties) {\n    const functionElement = CanvasElement.fromProperties(FunctionCanvasElement, properties);\n\n    return functionElement;\n  }\n}\n", "\"use strict\";\n\nimport Element from \"./element\";\nimport FunctionCanvasElement from \"./element/canvas/function\";\n\nimport { flatten, guarantee } from \"./utilities/array\";\n\nfunction createElement(firstArgument, properties, ...childElements) {\n  properties = properties || {};  ///\n\n  childElements = flatten(childElements); ///\n\n  let element;\n\n  if (isSubclassOf(firstArgument, Element)) {\n    const Class = firstArgument;  ///\n\n    Object.assign(properties, {\n      childElements\n    });\n\n    element = Class.fromProperties(properties);\n  } else if (typeof firstArgument === \"function\") {\n    const func = firstArgument,  ///\n          childElements = guarantee(func(properties));\n\n    Object.assign(properties, {\n      childElements\n    });\n\n    element = FunctionCanvasElement.fromProperties(properties);\n  }\n\n  return element;\n}\n\nexport default {\n  createElement\n};\n\nfunction isSubclassOf(argument, Class) {\n  let typeOf = false;\n\n  if (argument.name === Class.name) { ///\n    typeOf = true;\n  } else {\n    argument = Object.getPrototypeOf(argument); ///\n\n    if (argument) {\n      typeOf = isSubclassOf(argument, Class);\n    }\n  }\n\n  return typeOf;\n}\n", "\"use strict\";\n\nimport React from \"./react\";\n\nObject.assign(window, {\n  React\n});\n", "\"use strict\";\n\nexport function applyMatrix(uniformLocation, matrix) {\n  const transpose = false;  ///\n\n  this.context.uniformMatrix4fv(uniformLocation, transpose, matrix);\n}\n\n", "\"use strict\";\n\nexport function enableBlending() {\n  const { BLEND, SRC_ALPHA, ONE } = this.context,\n        capacity = BLEND,\n        sourceFactor = SRC_ALPHA,\n        destinationFactor = ONE;\n\n  this.context.enable(capacity);\n\n  this.context.blendFunc(sourceFactor, destinationFactor);\n}\n\n", "\"use strict\";\n\nexport function createProgram(vertexShader, fragmentShader) {\n  const program = this.context.createProgram();\n\n  this.context.attachShader(program, vertexShader);\n\n  this.context.attachShader(program, fragmentShader);\n  \n  this.context.linkProgram(program);\n  \n  return program;\n}\n\nexport function useProgram(program) {\n  this.context.useProgram(program);\n}\n", "\"use strict\";\n\nconst defaultR = 0.0,\n      defaultG = 0.0,\n      defaultB = 0.0,\n      defaultA = 1.0;\n\nexport function clearColour(r = defaultR, g = defaultG, b = defaultB, a = defaultA) { this.context.clearColor(r, g, b, a); }\n\nexport function clearColourBuffer() {\n  const { COLOR_BUFFER_BIT } = this.context,\n        mask = COLOR_BUFFER_BIT;\n\n  this.context.clear(mask);\n}\n", "\"use strict\";\n\nexport function createTexture(image, index, repeat) {\n\tconst { RGBA, LINEAR, UNSIGNED_BYTE, TEXTURE0, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNPACK_FLIP_Y_WEBGL, CLAMP_TO_EDGE, NEAREST, REPEAT, TEXTURE_MIN_FILTER } = this.context,\n\t\t\t\ttarget = TEXTURE0 + index,\n\t\t\t\tlevel = 0,\n\t\t\t\tinternalFormat = RGBA,\n\t\t\t\tformat = RGBA,\n\t\t\t\ttype = UNSIGNED_BYTE,\n\t\t\t\ttexture = this.context.createTexture();\n\n  this.context.activeTexture(target);\n\n  this.context.bindTexture(TEXTURE_2D, texture);\n\n  this.context.pixelStorei(UNPACK_FLIP_Y_WEBGL, true);\n\n  this.context.texImage2D(TEXTURE_2D, level, internalFormat, format, type, image);\n\n  if (repeat) {\n    this.context.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, REPEAT);\n    this.context.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, REPEAT);\n  } else {\n    this.context.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    this.context.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n\n\tthis.context.texParameteri(TEXTURE_2D, TEXTURE_MIN_FILTER, LINEAR);\n\n\treturn texture;\n}\n\nexport function enableAnisotropicFiltering() {\n  const extension = (\n    this.context.getExtension(\"EXT_texture_filter_anisotropic\") ||\n    this.context.getExtension(\"MOZ_EXT_texture_filter_anisotropic\") ||\n    this.context.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\")\n  );\n\n  if (extension) {\n    const { TEXTURE_2D } = this.context,\n          { MAX_TEXTURE_MAX_ANISOTROPY_EXT, TEXTURE_MAX_ANISOTROPY_EXT } = extension,\n          maximum = this.context.getParameter(MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\n    this.context.texParameterf(TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, maximum);\n  }\n}\n", "\"use strict\";\n\nconst defaultDepth = 1.0;\n\nexport function clearDepth(depth = defaultDepth) {\n  this.context.clearDepth(depth); \n}\n\nexport function clearDepthBuffer() {\n  const { DEPTH_BUFFER_BIT } = this.context,\n        mask = DEPTH_BUFFER_BIT;\n\n  this.context.clear(mask);\n}\n\nexport function enableDepthTesting() {\n  const { DEPTH_TEST, LEQUAL } = this.context,\n        capacity = DEPTH_TEST,\n        depthComparisonFunction = LEQUAL;\n\n  this.context.enable(capacity);\n\n  this.context.depthFunc(depthComparisonFunction);\n}\n", "\"use strict\";\n\nexport function createShader(type, shaderSource) {\n  const { COMPILE_STATUS } = this.context,\n        pname = COMPILE_STATUS,\n        shader = this.context.createShader(type);\n\n  this.context.shaderSource(shader, shaderSource);\n\n  this.context.compileShader(shader);\n\n  const compileStatus = this.context.getShaderParameter(shader, pname);\n\n  if (!compileStatus) {\n    throw new Error(\"Unable to create the shader.\");\n  }\n\n  return shader;\n}\n\nexport function createVertexShader(vertexShaderSource, canvas) {\n  const { VERTEX_SHADER } = this.context,\n        type = VERTEX_SHADER,\n        vertexShader = this.createShader(type, vertexShaderSource);\n\n  return vertexShader;\n}\n\nexport function createFragmentShader(fragmentShaderSource, canvas) {\n  const { FRAGMENT_SHADER } = this.context,\n        type = FRAGMENT_SHADER,\n        fragmentShader = this.createShader(type, fragmentShaderSource);\n\n  return fragmentShader;\n}\n", "\"use strict\";\n\nexport function createElementBuffer(data) {\n  const { ELEMENT_ARRAY_BUFFER, STATIC_DRAW } = this.context,\n        target = ELEMENT_ARRAY_BUFFER,\n        usage = STATIC_DRAW,\n        uint16Array = new Uint16Array(data),\n        elementBuffer = this.context.createBuffer();\n\n  this.context.bindBuffer(target, elementBuffer);\n\n  this.context.bufferData(target, uint16Array, usage);\n\n  return elementBuffer;\n}\n\nexport function bindElementBuffer(elementBuffer) {\n  const { ELEMENT_ARRAY_BUFFER } = this.context,\n        target = ELEMENT_ARRAY_BUFFER;\n\n  this.context.bindBuffer(target, elementBuffer);\n}\n\nexport function createBuffer(data) {\n  const { ARRAY_BUFFER, STATIC_DRAW } = this.context,\n        target = ARRAY_BUFFER,\n        usage = STATIC_DRAW,\n        buffer = this.context.createBuffer(),\n        float32Array = new Float32Array(data);\n\n  this.context.bindBuffer(target, buffer);\n\n  this.context.bufferData(target, float32Array, usage);\n\n  return buffer;\n}\n\nexport function bindBuffer(buffer, attributeLocation, components) {\n  const { ARRAY_BUFFER, FLOAT } = this.context,\n        target = ARRAY_BUFFER,\n        type = FLOAT,\n        normalize = false,\n        stride = 0,\n        offset = 0;\n\n  this.context.bindBuffer(target, buffer);\n\n  this.context.vertexAttribPointer(attributeLocation, components, type, normalize, stride, offset);\n\n  this.context.enableVertexAttribArray(attributeLocation);\n}\n", "\"use strict\";\n\nexport function getUniformLocation(program, name) {\n  return this.context.getUniformLocation(program, name);\n}\n\nexport function getAttributeLocation(program, name) {\n  return this.context.getAttribLocation(program, name);\n}\n\nexport function setUniformLocationIntegerValue(uniformLocation, integerValue) {\n  this.context.uniform1i(uniformLocation, integerValue);\n}\n", "\"use strict\";\n\nimport { applyMatrix } from \"./mixin/matrix\";\nimport { enableBlending } from \"./mixin/blending\";\nimport { createProgram, useProgram } from \"./mixin/program\";\nimport { clearColour, clearColourBuffer } from \"./mixin/colour\";\nimport { createTexture, enableAnisotropicFiltering } from \"./mixin/texture\";\nimport { clearDepth, clearDepthBuffer, enableDepthTesting } from \"./mixin/depth\";\nimport { createShader, createVertexShader, createFragmentShader } from \"./mixin/shader\";\nimport { bindBuffer, bindElementBuffer, createBuffer, createElementBuffer } from \"./mixin/buffer\";\nimport { getAttributeLocation, getUniformLocation, setUniformLocationIntegerValue } from \"./mixin/location\";\n\nexport default class Canvas {\n  applyMatrix = applyMatrix;\n\n  enableBlending = enableBlending;\n\n  useProgram = useProgram;\n  createProgram = createProgram;\n\n  clearColour = clearColour;\n  clearColourBuffer = clearColourBuffer;\n\n  createTexture = createTexture;\n  enableAnisotropicFiltering = enableAnisotropicFiltering;\n\n  clearDepth = clearDepth;\n  clearDepthBuffer = clearDepthBuffer;\n  enableDepthTesting = enableDepthTesting;\n\n  createShader = createShader;\n  createVertexShader = createVertexShader;\n  createFragmentShader = createFragmentShader;\n\n  bindBuffer = bindBuffer;\n  createBuffer = createBuffer;\n  bindElementBuffer = bindElementBuffer;\n  createElementBuffer = createElementBuffer;\n\n  getUniformLocation = getUniformLocation;\n  getAttributeLocation = getAttributeLocation;\n  setUniformLocationIntegerValue = setUniformLocationIntegerValue;\n\n  constructor(selector = \"canvas\") {\n    const domElement = domElementFromSelector(selector),\n          context = contextFromDOMElement(domElement);\n\n    this.domElement = domElement;\n\n    this.context = context;\n\n    this.enableDepthTesting();  ///\n  }\n\n  getDOMElement() {\n    return this.domElement;\n  }\n\n  getContext() {\n    return this.context;\n  }\n\n  getWidth() { return this.domElement.width; }\n\n  getHeight() { return this.domElement.height; }\n\n  getClientWidth() { return this.domElement.clientWidth; }\n\n  getClientHeight() { return this.domElement.clientHeight; }\n\n  setWidth(width) { this.domElement.setAttribute(\"width\", width); }\n\n  setHeight(height) { this.domElement.setAttribute(\"height\", height); }\n\n  resize(width, height) {\n    const x = 0,\n          y = 0;\n\n    this.setWidth(width);\n\n    this.setHeight(height);\n\n    this.context.viewport(x, y, width, height);\n  }\n\n  clear() {\n    this.clearDepth();\n\n    this.clearColour();\n\n    this.clearDepthBuffer();\n\n    this.clearColourBuffer();\n  }\n\n  render(renderer, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix) {\n    const offsetsMatrixUniformLocation = renderer.getOffsetsMatrixUniformLocation(),\n          normalsMatrixUniformLocation = renderer.getNormalsMatrixUniformLocation(),\n          positionMatrixUniformLocation = renderer.getPositionMatrixUniformLocation(),\n          rotationsMatrixUniformLocation = renderer.getRotationsMatrixUniformLocation(),\n          projectionMatrixUniformLocation = renderer.getProjectionMatrixUniformLocation();\n\n    this.applyMatrix(offsetsMatrixUniformLocation, offsetsMatrix);\n    this.applyMatrix(normalsMatrixUniformLocation, normalsMatrix);\n    this.applyMatrix(positionMatrixUniformLocation, positionMatrix);\n    this.applyMatrix(rotationsMatrixUniformLocation, rotationsMatrix);\n    this.applyMatrix(projectionMatrixUniformLocation, projectionMatrix);\n  }\n\n  drawElements(start, finish) {\n    const { TRIANGLES, UNSIGNED_SHORT } = this.context,\n          mode = TRIANGLES,\n          type = UNSIGNED_SHORT,\n          count = finish - start,\n          offset = start * 2; ///\n\n    this.context.drawElements(mode, count, type, offset)\n  }\n}\n\nfunction domElementFromSelector(selector) {\n  const domElement = (typeof selector === \"string\") ?\n                       document.querySelectorAll(selector)[0] :  ///\n                         selector;  ///\n\n  return domElement;\n}\n\nfunction contextFromDOMElement(domElement) {\n  const context = domElement.getContext(\"webgl\");\n\n  if (!context) {\n    throw new Error(`Unable to get the WebGL context.`);\n  }\n\n  return context;\n}\n", "\"use strict\";\n\nimport { subtract3 } from \"../maths/vector\";\n\nexport default class Edge {\n  constructor(position, extent) {\n    this.position = position;\n    this.extent = extent;\n  }\n\n  getPosition() {\n    return this.position;\n  }\n\n  getExtent() {\n    return this.extent;\n  }\n\n  clone() {\n    const position = this.position.slice(),\n          extent = this.extent.slice(),\n          edge = new Edge(position, extent);\n\n    return edge;\n  }\n\n  static fromStartVertexAndEndVertex(Class, startVertex, endVertex) {\n    if (endVertex === undefined) {\n      endVertex = startVertex;\n      startVertex = Class;\n      Class = Edge;\n    }\n    \n    const startPosition = startVertex.getPosition(),\n          endPosition = endVertex.getPosition(),\n          position = startPosition.slice(), ///\n          extent = subtract3(endPosition, startPosition),\n          edge = new Class(position, extent);\n\n    return edge;\n  }\n}\n", "\"use strict\";\n\nimport { add3, scale3 } from \"../maths/vector\";\n\nexport function calculateMidPointPosition(vertices) {\n  const midPointPosition = vertices.reduce((midPointPosition, vertex) => {\n    const vertexPosition = vertex.getPosition(),\n          scaledVertexPosition = scale3(vertexPosition, 1/3);\n\n    midPointPosition = add3(midPointPosition, scaledVertexPosition);\n\n    return midPointPosition;\n  }, [ 0, 0, 0 ]);\n\n  return midPointPosition;\n}\n\nexport function projectMidPointPositionOntoXYPlane(midPointPosition) {\n  midPointPosition = [ ...midPointPosition.slice(0, 2), 0 ];  ///\n\n  return midPointPosition;\n}\n\nexport function isMidPointPositionToOneSideOfMaskingEdges(midPointPosition, maskingEdges) {\n  const midPointPositionToTheLeftOfMaskingEdges = isMidPointPositionToTheLeftOfMaskingEdges(midPointPosition, maskingEdges),\n        midPointPositionToTheRightOfMaskingEdges = isMidPointPositionToTheRightOfMaskingEdges(midPointPosition, maskingEdges),\n        midPointPositionToOneSideOfMaskingEdges = midPointPositionToTheLeftOfMaskingEdges || midPointPositionToTheRightOfMaskingEdges; ///\n\n  return midPointPositionToOneSideOfMaskingEdges;\n}\n\nfunction isMidPointPositionToTheLeftOfMaskingEdges(midPointPosition, maskingEdges) {\n  const midPointPositionToTheLeftOfMaskingEdges = maskingEdges.reduce((midPointPositionToTheLeftOfMaskingEdges, maskingEdge) => {\n    if (midPointPositionToTheLeftOfMaskingEdges) {\n      const midPointPositionToTheLeftOfMaskingEdge = maskingEdge.isMidPointPositionToTheLeft(midPointPosition);\n\n      midPointPositionToTheLeftOfMaskingEdges = midPointPositionToTheLeftOfMaskingEdge;\n    }\n\n    return midPointPositionToTheLeftOfMaskingEdges;\n  }, true);\n\n  return midPointPositionToTheLeftOfMaskingEdges;\n}\n\nfunction isMidPointPositionToTheRightOfMaskingEdges(midPointPosition, maskingEdges) {\n  const midPointPositionToTheRightOfMaskingEdges = maskingEdges.reduce((midPointPositionToTheRightOfMaskingEdges, maskingEdge) => {\n    if (midPointPositionToTheRightOfMaskingEdges) {\n      const midPointPositionToTheRightOfMaskingEdge = maskingEdge.isMidPointPositionToTheRight(midPointPosition);\n\n      midPointPositionToTheRightOfMaskingEdges = midPointPositionToTheRightOfMaskingEdge;\n    }\n\n    return midPointPositionToTheRightOfMaskingEdges;\n  }, true);\n\n  return midPointPositionToTheRightOfMaskingEdges;\n}\n", "\"use strict\";\n\nimport Edge from \"../edge\";\n\nimport { third } from \"../../utilities/array\";\nimport { subtract3, cross3 } from \"../../maths/vector\";\nimport { projectMidPointPositionOntoXYPlane } from \"../../utilities/midPoint\";\n\nexport default class MaskingEdge extends Edge {\n  isMidPointPositionToTheLeft(midPointPosition) {\n    midPointPosition = projectMidPointPositionOntoXYPlane(midPointPosition);  ///\n\n    const extent = this.getExtent(),\n          position = this.getPosition(),\n          midPointRelativePosition = subtract3(midPointPosition, position),\n          crossProductComponents = cross3(extent, midPointRelativePosition), ///\n          thirdCrossProductComponent = third(crossProductComponents),\n          midPointPositionToTheLeft = (thirdCrossProductComponent > 0);\n\n    return midPointPositionToTheLeft;\n  }\n  \n  isMidPointPositionToTheRight(midPointPosition) {\n    const midPointPositionToTheLeft = this.isMidPointPositionToTheLeft(midPointPosition),\n          midPointPositionToTheRight = !midPointPositionToTheLeft;\n    \n    return midPointPositionToTheRight;\n  }\n  \n  static fromStartVertexAndEndVertex(startVertex, endVertex) { return Edge.fromStartVertexAndEndVertex(MaskingEdge, startVertex, endVertex); }\n}\n", "\"use strict\";\n\nimport { DEFAULT_MARGIN_OF_ERROR } from \"../constants\";\n\nexport function isApproximatelyEqualToOne(value, marginOfError = DEFAULT_MARGIN_OF_ERROR) { return isApproximatelyEqualTo(value, 1, marginOfError); }\n\nexport function isApproximatelyEqualToZero(value, marginOfError = DEFAULT_MARGIN_OF_ERROR) { return isApproximatelyEqualTo(value, 0, marginOfError); }\n\nfunction isApproximatelyEqualTo(valueA, valueB, marginOfError = DEFAULT_MARGIN_OF_ERROR) {\n  const difference = valueA - valueB,\n        absoluteDifference = Math.abs(difference),\n        approximatelyEqual = (absoluteDifference < marginOfError);\n\n  return approximatelyEqual;\n}\n", "\"use strict\";\n\nexport function calculateHalfAngleSine(angleCosine) { return Math.sqrt((1 - angleCosine) / 2); }\n\nexport function calculateHalfAngleCosine(angleCosine) { return Math.sqrt((1 + angleCosine) / 2); }\n", "\"use strict\";\n\nimport { dot3, cross3, normalise3 } from \"../maths/vector\";\nimport { isApproximatelyEqualToOne } from \"../utilities/approximate\";\nimport { first, second, third, fourth } from \"../utilities/array\";\nimport { calculateHalfAngleCosine, calculateHalfAngleSine } from \"../utilities/angle\";\n\nexport function rotateImaginaryQuaternion(imaginaryQuaternion, rotationQuaternion, inverseRotationQuaternion) { return hamiltonProduct(hamiltonProduct(rotationQuaternion, imaginaryQuaternion), inverseRotationQuaternion); }\n\nexport function calculateInverseRotationQuaternion(rotationQuaternion) {\n  const rotationQuaternionComponents = rotationQuaternion,  ///\n        firstRotationQuaternionComponent = first(rotationQuaternionComponents),\n        secondRotationQuaternionComponent = second(rotationQuaternionComponents),\n        thirdRotationQuaternionComponent = third(rotationQuaternionComponents),\n        fourthRotationQuaternionComponent = fourth(rotationQuaternionComponents),\n        inverseRotationQuaternion = [\n          firstRotationQuaternionComponent,\n          -secondRotationQuaternionComponent,\n          -thirdRotationQuaternionComponent,\n          -fourthRotationQuaternionComponent\n        ];\n\n  return inverseRotationQuaternion;\n}\n\nexport function calculateForwardsRotationQuaternion(rotationQuaternion) {\n  const forwardsRotationQuaternion = rotationQuaternion;  ///\n\n  return forwardsRotationQuaternion;\n}\n\nexport function calculateBackwardsRotationQuaternion(rotationQuaternion) {\n  const inverseRotationQuaternion = calculateInverseRotationQuaternion(rotationQuaternion),\n        backwardsRotationQuaternion = inverseRotationQuaternion;  ///\n\n  return backwardsRotationQuaternion;\n\n}\n\nexport function calculateArbitraryRotationQuaternion(normal) {\n  const extent = normal.getExtent(),\n        unitNormal = extent,  ///\n        zAxis = [ 0, 0, 1 ],\n        dotProductOfUnitNormalAndZAxis = dot3(unitNormal, zAxis),\n        crossProductOfUnitNormalAndZAxis = cross3(unitNormal, zAxis),\n        angleOfRotationCosine = dotProductOfUnitNormalAndZAxis, ///\n        angleOfRotationCosineAbsoluteValue = Math.abs(angleOfRotationCosine),\n        angleOfRotationCosineAbsoluteValueApproximatelyEqualToOne = isApproximatelyEqualToOne(angleOfRotationCosineAbsoluteValue),\n        axisOfRotation = angleOfRotationCosineAbsoluteValueApproximatelyEqualToOne ?\n                          [ 1, 0, 0 ] : ///\n                            crossProductOfUnitNormalAndZAxis,\n        unitAxisOfRotation = normalise3(axisOfRotation),\n        halfAngleOfRotationCosine = calculateHalfAngleCosine(angleOfRotationCosine),\n        halfAngleOfRotationSine = calculateHalfAngleSine(angleOfRotationCosine),\n        unitAxisOfRotationComponents = unitAxisOfRotation,  ///\n        firstAxisOfRotationComponent = first(unitAxisOfRotationComponents),\n        secondAxisOfRotationComponent = second(unitAxisOfRotationComponents),\n        thirdAxisOfRotationComponent = third(unitAxisOfRotationComponents),\n        arbitraryRotationQuaternion = [\n          halfAngleOfRotationCosine,\n          firstAxisOfRotationComponent * halfAngleOfRotationSine,\n          secondAxisOfRotationComponent * halfAngleOfRotationSine,\n          thirdAxisOfRotationComponent * halfAngleOfRotationSine\n        ];\n\n  return arbitraryRotationQuaternion;\n}\n\nexport function calculateRotationAboutZAxisQuaternion(maskingEdge) {\n  const maskingEdgeExtent = maskingEdge.getExtent(),\n        unitMaskingEdgeExtent = normalise3(maskingEdgeExtent),\n        unitMaskingEdgeExtentComponents = unitMaskingEdgeExtent,  ///\n        firstUnitMaskingEdgeExtentComponent = first(unitMaskingEdgeExtentComponents),\n        secondUnitMaskingEdgeExtentComponent = second(unitMaskingEdgeExtentComponents),\n        angleOfRotationSine = firstUnitMaskingEdgeExtentComponent,  ///\n        angleOfRotationCosine = secondUnitMaskingEdgeExtentComponent,  ///\n        halfAngleOfRotationCosine = calculateHalfAngleCosine(angleOfRotationCosine),\n        halfAngleOfRotationSine = (angleOfRotationSine > 0 ) ?\n                                   +calculateHalfAngleSine(angleOfRotationCosine) :\n                                     -calculateHalfAngleSine(angleOfRotationCosine),\n        rotationAboutZAxisQuaternion = [\n          halfAngleOfRotationCosine,\n          0,\n          0,\n          halfAngleOfRotationSine\n        ];\n\n  return rotationAboutZAxisQuaternion;\n}\n\nfunction hamiltonProduct(quaternionA, quaternionB) {\n  const a1 = quaternionA[0],\n        b1 = quaternionA[1],\n        c1 = quaternionA[2],\n        d1 = quaternionA[3],\n        a2 = quaternionB[0],\n        b2 = quaternionB[1],\n        c2 = quaternionB[2],\n        d2 = quaternionB[3],\n        a = a1 * a2 - b1 * b2 - c1 * c2 - d1 * d2,\n        b = a1 * b2 + b1 * a2 + c1 * d2 - d1 * c2,\n        c = a1 * c2 - b1 * d2 + c1 * a2 + d1 * b2,\n        d = a1 * d2 + b1 * c2 - c1 * b2 + d1 * a2,\n        quaternion = [ a, b, c, d ];\n\n  return quaternion;\n}\n", "\"use strict\";\n\nimport { rotateImaginaryQuaternion, calculateInverseRotationQuaternion } from \"../utilities/quaternion\";\n\nexport function rotatePosition(position, rotationQuaternion) {\n  const imaginaryQuaternion = imaginaryQuaternionFromPosition(position),\n        inverseRotationQuaternion = calculateInverseRotationQuaternion(rotationQuaternion),\n        rotatedImaginaryQuaternion = rotateImaginaryQuaternion(imaginaryQuaternion, rotationQuaternion, inverseRotationQuaternion);\n\n  position = positionFromImaginaryQuaternion(rotatedImaginaryQuaternion);\n\n  return position;\n}\n\nfunction imaginaryQuaternionFromPosition(position) { return [0, ...position]; }  ///\n\nfunction positionFromImaginaryQuaternion(imaginaryQuaternion) { return imaginaryQuaternion.slice(1); }  ///\n", "\"use strict\";\n\nimport { first, second } from \"../utilities/array\";\nimport { add3, subtract3, scale3 } from \"../maths/vector\";\nimport { isApproximatelyEqualToZero } from \"../utilities/approximate\";\n\nexport function calculateIntersection(edge, firstPositionComponent) {\n  let intersection = null;\n\n  const edgeNonParallel = isEdgeNonParallel(edge);\n\n  if (edgeNonParallel) {\n    const edgeIntersection = calculateEdgeIntersection(edge, firstPositionComponent),\n          edgeIntersectionNonTrivial = ((edgeIntersection > 0 ) && (edgeIntersection < 1));\n\n    if (edgeIntersectionNonTrivial) {\n      intersection = edgeIntersection;  ///\n    }\n  }\n\n  return intersection;\n}\n\nexport function calculateNonNullIntersections(intersections) {\n  const nonNullIntersections = intersections.reduce((nonNullIntersections, intersection) => {\n    if (intersection !== null) {\n      const nonNullIntersection = intersection; ///\n\n      nonNullIntersections.push(nonNullIntersection);\n    }\n\n    return nonNullIntersections;\n  }, []);\n\n  return nonNullIntersections;\n}\n\nexport function calculateNullIntersectionIndex(intersections) {\n  const nullIntersectionIndex = intersections.reduce((nullIntersectionIndex, intersection, index) => {\n    if (nullIntersectionIndex === null) {\n      if (intersection === null) {\n        nullIntersectionIndex = index;\n      }\n    }\n\n    return nullIntersectionIndex;\n  }, null);\n\n  return nullIntersectionIndex;\n}\n\nexport function calculateNonNullIntersectionIndex(intersections) {\n  const nullIntersectionIndex = intersections.reduce((nullIntersectionIndex, intersection, index) => {\n    if (nullIntersectionIndex === null) {\n      if (intersection !== null) {\n        nullIntersectionIndex = index;\n      }\n    }\n\n    return nullIntersectionIndex;\n  }, null);\n\n  return nullIntersectionIndex;\n}\n\nexport function calculateIntermediateVertexPosition(startVertexPosition, endVertexPosition, intersection) {\n  const extent = subtract3(endVertexPosition, startVertexPosition),\n        offset = scale3(extent, intersection),\n        intermediateVertexPosition = add3(startVertexPosition, offset);\n\n  return intermediateVertexPosition;\n}\n\nfunction isEdgeNonParallel(edge) {\n  const edgeExtent = edge.getExtent(),\n        edgeExtentComponents = edgeExtent, ///\n        firstEdgeExtentComponent = first(edgeExtentComponents),\n        secondEdgeExtentComponent = second(edgeExtentComponents),\n        edgeAngleTangent = firstEdgeExtentComponent / secondEdgeExtentComponent,\n        edgeAngleTangentApproximatelyEqualToZero = isApproximatelyEqualToZero(edgeAngleTangent),\n        edgeParallel = edgeAngleTangentApproximatelyEqualToZero, ///\n        edgeNonParallel = !edgeParallel;\n\n  return edgeNonParallel;\n}\n\nfunction calculateEdgeIntersection(edge, firstPositionComponent) {\n  const edgeExtent = edge.getExtent(),\n        edgePosition = edge.getPosition(),\n        edgeExtentComponents = edgeExtent, ///\n        edgePositionComponents = edgePosition, ///\n        firstEdgeExtentComponent = first(edgeExtentComponents),\n        firstEdgePositionComponent = first(edgePositionComponents),\n        edgeIntersection = (firstPositionComponent - firstEdgePositionComponent) / firstEdgeExtentComponent;\n\n  return edgeIntersection;\n}\n", "\"use strict\";\n\nimport { first } from \"../utilities/array\";\nimport { rotatePosition } from \"../utilities/rotation\";\nimport { calculateIntersection } from \"../utilities/intersection\";\nimport { calculateRotationAboutZAxisQuaternion, calculateForwardsRotationQuaternion, calculateBackwardsRotationQuaternion } from \"../utilities/quaternion\";\n\nexport default class VerticalLine {\n  constructor(firstPositionComponent, forwardsRotationQuaternion, backwardsRotationQuaternion) {\n    this.firstPositionComponent = firstPositionComponent;\n    this.forwardsRotationQuaternion = forwardsRotationQuaternion;\n    this.backwardsRotationQuaternion = backwardsRotationQuaternion;\n  }\n\n  getFirstPositionComponent() {\n    return this.firstPositionComponent;\n  }\n  \n  getForwardsRotationQuaternion() {\n    return this.forwardsRotationQuaternion;\n  }\n\n  getBackwardsRotationQuaternion() {\n    return this.backwardsRotationQuaternion;\n  }\n\n  splitFacet(facet, smallerFacets) {\n    const edges = facet.getEdges(),\n          intersections = edges.map((edge) => {\n            const intersection = calculateIntersection(edge, this.firstPositionComponent);\n\n            return intersection;\n          });\n\n    facet.splitWithIntersections(intersections, smallerFacets);\n  }\n\n  splitFacets(facets) {\n    const smallerFacets = [];\n\n    facets.forEach((facet) => {\n      facet.rotate(this.forwardsRotationQuaternion);\n\n      this.splitFacet(facet, smallerFacets);\n    });\n\n    smallerFacets.forEach((smallerFacet) => smallerFacet.rotate(this.backwardsRotationQuaternion));\n\n    return smallerFacets;\n  }\n\n  static fromMaskingEdge(maskingEdge) {\n    const maskingEdgePosition = maskingEdge.getPosition(),\n          rotationAboutZAxisQuaternion = calculateRotationAboutZAxisQuaternion(maskingEdge),\n          rotationQuaternion = rotationAboutZAxisQuaternion,  ///\n          forwardsRotationQuaternion = calculateForwardsRotationQuaternion(rotationQuaternion),\n          backwardsRotationQuaternion = calculateBackwardsRotationQuaternion(rotationQuaternion),\n          position = rotatePosition(maskingEdgePosition, rotationQuaternion),\n          positionComponents = position, ///\n          firstPositionComponent = first(positionComponents),\n          verticalLine = new VerticalLine(firstPositionComponent, forwardsRotationQuaternion, backwardsRotationQuaternion);\n\n    return verticalLine;\n  }\n}\n", "\"use strict\";\n\nexport function rotateVertices(vertices, rotationQuaternion) {\n  const rotatedVertices = vertices.map((vertex) => {\n    const rotatedVertex = vertex.clone();  ///\n\n    rotatedVertex.rotate(rotationQuaternion);\n\n    return rotatedVertex;\n  });\n\n  return rotatedVertices;\n}\n\nexport function verticesFromCoordinateTuplesAndIndexTuple(coordinateTuples, indexTuple, Vertex) {  ///\n  const indexes = indexTuple, ///\n        vertices = indexes.map((index) => {\n          const coordinateTuple = coordinateTuples[index],\n                vertex = Vertex.fromCoordinateTuple(coordinateTuple);\n\n          return vertex;\n        });\n\n  return vertices;\n}\n", "\"use strict\";\n\nimport MaskingEdge from \"./edge/masking\";\nimport VerticalLine from \"./verticalLine\";\n\nimport { rotateVertices } from \"../utilities/vertices\";\nimport { push, separate } from \"../utilities/array\";\nimport { VERTICES_LENGTH } from \"../constants\";\nimport { calculateForwardsRotationQuaternion, calculateArbitraryRotationQuaternion, calculateBackwardsRotationQuaternion } from \"../utilities/quaternion\";\n\nexport default class MaskingFacet {\n  constructor(maskingEdges, verticalLines, forwardsRotationQuaternion, backwardsRotationQuaternion) {\n    this.maskingEdges = maskingEdges;\n    this.verticalLines = verticalLines;\n    this.forwardsRotationQuaternion = forwardsRotationQuaternion;\n    this.backwardsRotationQuaternion = backwardsRotationQuaternion;\n  }\n\n  getMaskingEdges() {\n    return this.maskingEdges;\n  }\n\n  getVerticalLines() {\n    return this.verticalLines;\n  }\n\n  getForwardsRotationQuaternion() {\n    return this.forwardsRotationQuaternion;\n  }\n\n  getBackwardsRotationQuaternion() {\n    return this.backwardsRotationQuaternion;\n  }\n\n  maskFacet(facet, unmaskedFacets) {\n    const unmaskedFacet = facet.clone();  ///\n\n    facet.rotate(this.forwardsRotationQuaternion);\n\n    const maskingFacet = this,  ///\n          smallerFacets = this.splitFacet(facet),\n          maskedSmallerFacets = [],\n          unmaskedSmallerFacets = [];\n\n    separate(smallerFacets, maskedSmallerFacets, unmaskedSmallerFacets, (smallerFacet) => {\n      const smallerFacetMasked = smallerFacet.isMasked(maskingFacet);\n\n      return smallerFacetMasked;\n    });\n\n    const maskedSmallerFacetsLength = maskedSmallerFacets.length;\n\n    if (maskedSmallerFacetsLength === 0) {\n      unmaskedFacets.push(unmaskedFacet);\n    } else {\n      unmaskedSmallerFacets.forEach((unmaskedSmallerFacet) => {\n        unmaskedSmallerFacet.rotate(this.backwardsRotationQuaternion);\n      });\n\n      push(unmaskedFacets, unmaskedSmallerFacets);\n    }\n  }\n  \n  splitFacet(facet) {\n    let facets = [\n          facet\n        ],\n        smallerFacets = facets; ///\n\n    this.verticalLines.forEach((verticalLine) => {\n      smallerFacets = verticalLine.splitFacets(facets);\n\n      facets = smallerFacets; ///\n    });\n\n    return smallerFacets;\n  }\n\n  static fromFacet(facet) {\n    const facetNormal = facet.getNormal(),\n          facetVertices = facet.getVertices(),\n          normal = facetNormal, ///\n          arbitraryRotationQuaternion = calculateArbitraryRotationQuaternion(normal),\n          rotationQuaternion = arbitraryRotationQuaternion, ///\n          vertices = rotateVertices(facetVertices, rotationQuaternion),\n          maskingEdges = calculateMaskingEdges(vertices),\n          verticalLines = maskingEdges.map((maskingEdge) => {\n            const verticalLine = VerticalLine.fromMaskingEdge(maskingEdge);\n            \n            return verticalLine;\n          }),\n          forwardsRotationQuaternion = calculateForwardsRotationQuaternion(rotationQuaternion),\n          backwardsRotationQuaternion = calculateBackwardsRotationQuaternion(rotationQuaternion),\n          maskingFacet = new MaskingFacet(maskingEdges, verticalLines, forwardsRotationQuaternion, backwardsRotationQuaternion);\n\n    return maskingFacet;\n  }\n}\n\nfunction calculateMaskingEdges(vertices) {\n  const maskingEdges = vertices.map((vertex, index) => {\n          const startIndex = index,\n                endIndex = (startIndex + 1) % VERTICES_LENGTH,\n                startVertex = vertices[startIndex],\n                endVertex = vertices[endIndex],\n                maskingEdge = MaskingEdge.fromStartVertexAndEndVertex(startVertex, endVertex);\n\n          return maskingEdge;\n        });\n\n  return maskingEdges;\n}\n", "\"use strict\";\n\nimport Element from \"../element\";\nimport MaskingFacet from \"../primitive/maskingFacet\";\n\nimport { push } from \"../utilities/array\";\n\nexport default class Mask extends Element {\n  constructor(hidden) {\n    super();\n\n    this.hidden = hidden;\n  }\n\n  retrieveMaskingFacets() {\n    const childElements = this.getChildElements(),\n          facets = retrieveFacets(childElements),\n          maskingFacets = facets.map((facet) => {\n            const maskingFacet = MaskingFacet.fromFacet(facet);\n            \n            return maskingFacet;\n          });\n    \n    return maskingFacets;          \n  }\n\n  maskElement(element) {\n    const maskingFacets = this.retrieveMaskingFacets(),\n          childElements = element.getChildElements();\n\n    maskElement(element, maskingFacets);\n\n    childElements.forEach((childElement) => maskElement(childElement, maskingFacets));\n  }\n\n  initialise() {\n    const childElements = this.getChildElements();\n\n    childElements.forEach((childElement) => childElement.createFacets(this.hidden));\n\n    childElements.forEach((childElement) => childElement.amendFacets());\n  }\n\n  static fromProperties(properties) {\n    const { hidden = false } = properties,\n          mask = Element.fromProperties(Mask, properties, hidden);\n\n    mask.initialise();\n\n    return mask;\n  }\n}\n\nfunction retrieveFacets(childElements, facets = []) {\n  childElements.forEach((childElement) => {\n    const element = childElement, ///\n          elementFacets = element.getFacets(),\n          childElements = element.getChildElements();\n\n    push(facets, elementFacets);\n\n    retrieveFacets(childElements, facets);\n  });\n\n  return facets;\n}\n\nfunction maskElement(element, maskingFacets) {\n  let facets = element.getFacets();\n\n  maskingFacets.forEach((maskingFacet) => {\n    const unmaskedFacets = [];\n\n    facets.forEach((facet) => maskingFacet.maskFacet(facet, unmaskedFacets));\n\n    facets = unmaskedFacets;  ///\n  });\n\n  element.setFacets(facets);\n\n  const childElements = element.getChildElements();\n\n  childElements.forEach((childElement) => {\n    const element = childElement; ///\n\n    maskElement(element, maskingFacets);\n  });\n}\n", "\"use strict\";\n\nimport { push } from \"./utilities/array\";\n\nconst add = push; ///\n\nexport default class Renderer {\n  constructor(facets, program, rendererData, rendererBuffers, uniformLocations, attributeLocations) {\n    this.facets = facets;\n    this.program = program;\n    this.rendererData = rendererData;\n    this.rendererBuffers = rendererBuffers;\n    this.uniformLocations = uniformLocations;\n    this.attributeLocations = attributeLocations;\n  }\n\n  getFacets() {\n    return this.facets;\n  }\n\n  getProgram() {\n    return this.program;\n  }\n  \n  getRendererData() {\n    return this.rendererData;\n  }\n  \n  getRendererBuffers() {\n    return this.rendererBuffers;\n  }\n\n  getUniformLocations() {\n    return this.uniformLocations;\n  }\n\n  getAttributeLocations() {\n    return this.attributeLocations;\n  }\n\n  getCount() { return this.rendererData.getCount(); }\n\n  getOffsetsMatrixUniformLocation() { return this.uniformLocations.getOffsetsMatrixUniformLocation(); }\n\n  getNormalsMatrixUniformLocation() { return this.uniformLocations.getNormalsMatrixUniformLocation(); }\n\n  getPositionMatrixUniformLocation() { return this.uniformLocations.getPositionMatrixUniformLocation(); }\n\n  getRotationsMatrixUniformLocation() { return this.uniformLocations.getRotationsMatrixUniformLocation(); }\n\n  getProjectionMatrixUniformLocation() { return this.uniformLocations.getProjectionMatrixUniformLocation(); }\n\n  getVertexPositionAttributeLocation() { return this.attributeLocations.getVertexPositionAttributeLocation(); }\n\n  getVertexNormalAttributeLocation() { return this.attributeLocations.getVertexNormalAttributeLocation(); }\n\n  addFacets(facets) {\n    add(this.facets, facets);\n  }\n}\n\nexport function createProgram(vertexShaderSource, fragmentShaderSource, canvas) {\n  const vertexShader = canvas.createVertexShader(vertexShaderSource),\n        fragmentShader = canvas.createFragmentShader(fragmentShaderSource),\n        program = canvas.createProgram(vertexShader, fragmentShader);\n  \n  return program;\n}\n", "\"use strict\";\n\nimport { flatten, merge } from \"../utilities/array\";\n\nconst add = merge;  ///\n\nexport default class RendererData {\n  constructor(vertexPositionsData, vertexNormalsData, vertexIndexesData) {\n    this.vertexPositionsData = vertexPositionsData;\n    this.vertexNormalsData = vertexNormalsData;\n    this.vertexIndexesData = vertexIndexesData;\n  }\n\n  getCount() {\n    const vertexIndexesDataLength = this.vertexIndexesData.length,\n          count = vertexIndexesDataLength;  ///\n\n    return count;\n  }\n  \n  getVertexPositionsData() {\n    return this.vertexPositionsData;\n  }\n  \n  getVertexNormalsData() {\n    return this.vertexNormalsData;\n  }\n  \n  getVertexIndexesData() {\n    return this.vertexIndexesData;\n  }\n\n  addVertexPositions(vertexPositions) {\n    const vertexPositionsData = flatten(vertexPositions);\n\n    add(this.vertexPositionsData, vertexPositionsData);\n  }\n\n  addVertexNormals(vertexNormals) {\n    const vertexNormalsData = flatten(vertexNormals);\n\n    add(this.vertexNormalsData, vertexNormalsData);\n  }\n\n  addVertexIndexes(vertexIndexes) {\n    const vertexIndexesData = vertexIndexes;  ///\n\n    add(this.vertexIndexesData, vertexIndexesData);\n  }\n\n  static fromNothing(Class, ...remainingArguments) {\n    const vertexPositionsData = [],\n          vertexNormalsData = [],\n          vertexIndexesData = [],\n          rendererData = new Class(vertexPositionsData, vertexNormalsData, vertexIndexesData, ...remainingArguments);\n    \n    return rendererData;\n  }\n}\n", "\"use strict\";\n\nimport RendererData from \"../../renderer/data\";\n\nimport { merge, flatten } from \"../../utilities/array\";\n\nconst add = merge;  ///\n\nexport default class ColourRendererData extends RendererData {\n  constructor(vertexPositionsData, vertexNormalsData, vertexIndexesData, vertexColoursData) {\n    super(vertexPositionsData, vertexNormalsData, vertexIndexesData);\n\n    this.vertexColoursData = vertexColoursData;\n  }\n  \n  getVertexColoursData() {\n    return this.vertexColoursData;\n  }\n\n  addVertexColours(vertexColours) {\n    const vertexColoursData = flatten(vertexColours);\n\n    add(this.vertexColoursData, vertexColoursData);\n  }\n\n  static fromNothing() { \n    const vertexColoursData = [],\n          colourRendererData = RendererData.fromNothing(ColourRendererData, vertexColoursData);\n    \n    return colourRendererData;\n  }\n}\n", "\"use strict\";\n\nexport const normalsMatrixName = \"uNormalsMatrix\";\nexport const vertexNormalAttributeName = \"aVertexNormal\";\n\nconst lightingSource = new String(`\n  \n        uniform mat4 ${normalsMatrixName};\n\n        attribute vec3 ${vertexNormalAttributeName};\n\n        vec3 directionalLightColour = vec3(1, 1, 1),\n             directionalVector = normalize(vec3(1.0, 1.0, 1.0));\n          \n        vec3 calculateLighting() {\n          vec4 transformedNormal = ${normalsMatrixName} * vec4(${vertexNormalAttributeName}, 1.0);            \n\n          float directional = (dot(transformedNormal.xyz, directionalVector) + 1.0) / 2.0;\n          \n          vec3 lighting = (directionalLightColour * directional);\n          \n          return lighting;\n        }\n\n      `);\n\nexport default lightingSource;", "\"use strict\";\n\nexport const offsetsMatrixName = \"uOffsetsMatrix\";\nexport const positionMatrixName = \"uPositionMatrix\";\nexport const rotationsMatrixName = \"uRotationsMatrix\";\nexport const projectionMatrixName = \"uPerspectiveMatrix\";\nexport const vertexPositionAttributeName = \"aVertexPosition\";\n\nconst positionSource = new String(`\n  \n        uniform mat4 ${offsetsMatrixName},\n                     ${rotationsMatrixName},\n                     ${positionMatrixName},\n                     ${projectionMatrixName};\n        \n        attribute vec4 ${vertexPositionAttributeName};\n\n        vec4 calculatePosition() {\n          vec4 position = ${projectionMatrixName} * ${positionMatrixName} * ${rotationsMatrixName} * ${offsetsMatrixName} * ${vertexPositionAttributeName};\n          \n          return position;\n        }\n        \n      `);\n\nexport default positionSource;\n", "\"use strict\";\n\nimport lightingSource from \"../../source/lighting\";\nimport positionSource from \"../../source/position\";\n\nexport const vertexColourAttributeName = \"aVertexColour\"\n\nconst vertexShaderSource = new String(`\n    \n        attribute vec4 ${vertexColourAttributeName};\n\n        ${lightingSource}\n      \n        ${positionSource}\n    \n        varying highp vec3 vLighting;\n        \n        varying lowp vec4 vColour;\n        \n        void main() {\n          vLighting = calculateLighting();\n\n          gl_Position = calculatePosition();\n\n          vColour = ${vertexColourAttributeName};                    \n        }\n        \n      `);\n\nexport default vertexShaderSource;\n", "\"use strict\";\n\nconst fragmentShaderSource = new String(`\n        \n        varying lowp vec4 vColour;\n              \n        varying highp vec3 vLighting;\n\n        void main() {\n          gl_FragColor = vec4(vColour.rgb * vLighting, vColour.a);\n        }\n        \n      `);\n\nexport default fragmentShaderSource;\n", "\"use strict\";\n\nconst vertexNormalComponents = 3,\n      vertexPositionComponents = 3;\n\nexport default class RendererBuffers {\n  constructor(vertexPositionsBuffer, vertexNormalsBuffer, vertexIndexesElementBuffer) {\n    this.vertexPositionsBuffer = vertexPositionsBuffer;\n    this.vertexNormalsBuffer = vertexNormalsBuffer;\n    this.vertexIndexesElementBuffer = vertexIndexesElementBuffer;\n  }\n\n  createVertexPositionsBuffer(vertexPositionsData, canvas) {\n    this.vertexPositionsBuffer = canvas.createBuffer(vertexPositionsData);\n  }\n\n  createVertexNormalsBuffer(vertexNormalsData, canvas) {\n    this.vertexNormalsBuffer = canvas.createBuffer(vertexNormalsData);\n  }\n\n  createVertexIndexesElementBuffer(vertexIndexesData, canvas) {\n    this.vertexIndexesElementBuffer = canvas.createElementBuffer(vertexIndexesData);\n  }\n\n  bindVertexNormalsBuffer(vertexNormalAttributeLocation, canvas) {\n    canvas.bindBuffer(this.vertexNormalsBuffer, vertexNormalAttributeLocation, vertexNormalComponents);\n  }\n\n  bindVertexPositionsBuffer(vertexPositionAttributeLocation, canvas) {\n    canvas.bindBuffer(this.vertexPositionsBuffer, vertexPositionAttributeLocation, vertexPositionComponents);\n  }\n\n  bindVertexIndexesElementBuffer(canvas) {\n    canvas.bindElementBuffer(this.vertexIndexesElementBuffer);\n  }\n\n  createBuffers(vertexPositionsData, vertexNormalsData, vertexIndexesData, canvas) {\n    this.createVertexPositionsBuffer(vertexPositionsData, canvas);\n    this.createVertexNormalsBuffer(vertexNormalsData, canvas);\n    this.createVertexIndexesElementBuffer(vertexIndexesData, canvas);\n  }\n\n  bindBuffers(vertexNormalAttributeLocation, vertexPositionAttributeLocation, canvas) {\n    this.bindVertexNormalsBuffer(vertexNormalAttributeLocation, canvas);\n    this.bindVertexPositionsBuffer(vertexPositionAttributeLocation, canvas);\n    this.bindVertexIndexesElementBuffer(canvas);\n  }\n\n  static fromNothing(Class, ...remainingArguments) {\n    const vertexPositionsBuffer = null, ///\n          vertexNormalsBuffer = null, ///\n          vertexIndexesElementBuffer = null,  ///\n          rendererBuffers = new Class(vertexPositionsBuffer, vertexNormalsBuffer, vertexIndexesElementBuffer, ...remainingArguments);\n\n    return rendererBuffers;\n  }\n}\n", "\"use strict\";\n\nimport RendererBuffers from \"../../renderer/buffers\";\n\nconst vertexColourComponents = 4;\n\nexport default class ColourRendererBuffers extends RendererBuffers {\n  constructor(vertexPositionsBuffer, vertexNormalsBuffer, vertexIndexesElementBuffer, vertexColoursBuffer) {\n    super(vertexPositionsBuffer, vertexNormalsBuffer, vertexIndexesElementBuffer);\n\n    this.vertexColoursBuffer = vertexColoursBuffer;\n  }\n\n  createVertexColoursBuffer(vertexColoursData, canvas) {\n    this.vertexColoursBuffer = canvas.createBuffer(vertexColoursData);\n  }\n\n  bindVertexColoursBuffer(vertexColourAttributeLocation, canvas) {\n    canvas.bindBuffer(this.vertexColoursBuffer, vertexColourAttributeLocation, vertexColourComponents);\n  }\n\n  createBuffers(vertexPositionsData, vertexNormalsData, vertexIndexesData, vertexColoursData, canvas) {\n    super.createBuffers(vertexPositionsData, vertexNormalsData, vertexIndexesData, canvas);\n\n    this.createVertexColoursBuffer(vertexColoursData, canvas);\n  }\n\n  bindBuffers(vertexNormalAttributeLocation, vertexPositionAttributeLocation, vertexColourAttributeLocation, canvas) {\n    super.bindBuffers(vertexNormalAttributeLocation, vertexPositionAttributeLocation, canvas);\n\n    this.bindVertexColoursBuffer(vertexColourAttributeLocation, canvas);\n  }\n\n  static fromNothing() {\n    const vertexColoursBuffer = null, ///\n          colourRendererBuffers = RendererBuffers.fromNothing(ColourRendererBuffers, vertexColoursBuffer);\n    \n    return colourRendererBuffers;\n  }\n}\n", "\"use strict\";\n\nimport { normalsMatrixName } from \"../source/lighting\";\n\nimport { offsetsMatrixName, rotationsMatrixName, positionMatrixName, projectionMatrixName } from \"../source/position\";\n\nexport default class UniformLocations {\n  constructor(offsetsMatrixUniformLocation, normalsMatrixUniformLocation, positionMatrixUniformLocation, rotationsMatrixUniformLocation, projectionMatrixUniformLocation) {\n    this.offsetsMatrixUniformLocation = offsetsMatrixUniformLocation;\n    this.normalsMatrixUniformLocation = normalsMatrixUniformLocation;\n    this.positionMatrixUniformLocation = positionMatrixUniformLocation;\n    this.rotationsMatrixUniformLocation = rotationsMatrixUniformLocation;\n    this.projectionMatrixUniformLocation = projectionMatrixUniformLocation;\n  }\n\n  getOffsetsMatrixUniformLocation() {\n    return this.offsetsMatrixUniformLocation;\n  }\n\n  getNormalsMatrixUniformLocation() {\n    return this.normalsMatrixUniformLocation;\n  }\n\n  getPositionMatrixUniformLocation() {\n    return this.positionMatrixUniformLocation;\n  }\n\n  getRotationsMatrixUniformLocation() {\n    return this.rotationsMatrixUniformLocation;\n  }\n\n  getProjectionMatrixUniformLocation() {\n    return this.projectionMatrixUniformLocation;\n  }\n\n  static fromProgram(Class, program, canvas, ...remainingArguments) {\n    const offsetsMatrixUniformLocation = canvas.getUniformLocation(program, offsetsMatrixName),\n          normalsMatrixUniformLocation = canvas.getUniformLocation(program, normalsMatrixName),\n          positionMatrixUniformLocation = canvas.getUniformLocation(program, positionMatrixName),\n          rotationsMatrixUniformLocation = canvas.getUniformLocation(program, rotationsMatrixName),\n          projectionMatrixUniformLocation = canvas.getUniformLocation(program, projectionMatrixName),\n          uniformLocations = new Class(offsetsMatrixUniformLocation, normalsMatrixUniformLocation, positionMatrixUniformLocation, rotationsMatrixUniformLocation, projectionMatrixUniformLocation, ...remainingArguments);\n    \n    return uniformLocations;       \n  }\n}\n", "\"use strict\";\n\nimport UniformLocations from \"../../locations/uniform\";\n\nexport default class ColourUniformLocations extends UniformLocations {\n  static fromProgram(program, canvas) { return UniformLocations.fromProgram(ColourUniformLocations, program, canvas); }\n}\n", "\"use strict\";\n\nimport { vertexNormalAttributeName } from \"../source/lighting\";\nimport { vertexPositionAttributeName } from \"../source/position\";\n\nexport default class AttributeLocations {\n  constructor(vertexPositionAttributeLocation, vertexNormalAttributeLocation) {\n    this.vertexPositionAttributeLocation = vertexPositionAttributeLocation;\n    this.vertexNormalAttributeLocation = vertexNormalAttributeLocation;\n  }\n  \n  getVertexPositionAttributeLocation() {\n    return this.vertexPositionAttributeLocation;\n  }\n  \n  getVertexNormalAttributeLocation() {\n    return this.vertexNormalAttributeLocation;\n  }\n  \n  static fromProgram(Class, program, canvas, ...remainingArguments) {\n    const vertexPositionAttributeLocation = canvas.getAttributeLocation(program, vertexPositionAttributeName),\n          vertexNormalAttributeLocation = canvas.getAttributeLocation(program, vertexNormalAttributeName),\n          attributeLocations = new Class(vertexPositionAttributeLocation, vertexNormalAttributeLocation, ...remainingArguments);\n\n    return attributeLocations;\n  }  \n}\n", "\"use strict\";\n\nimport AttributeLocations from \"../../locations/attribute\";\n\nimport { vertexColourAttributeName } from \"../../source/colour/vertexShader\";\n\nexport default class ColourAttributeLocations extends AttributeLocations {\n  constructor(vertexPositionAttributeLocation, vertexNormalAttributeLocation, vertexColourAttributeLocation) {\n    super(vertexPositionAttributeLocation, vertexNormalAttributeLocation);\n\n    this.vertexColourAttributeLocation = vertexColourAttributeLocation;\n  }\n\n  getVertexColourAttributeLocation() {\n    return this.vertexColourAttributeLocation;\n  }\n  \n  static fromProgram(program, canvas) {\n    const vertexColourAttributeLocation = canvas.getAttributeLocation(program, vertexColourAttributeName),\n          colourAttributeLocations = AttributeLocations.fromProgram(ColourAttributeLocations, program, canvas, vertexColourAttributeLocation);\n\n    return colourAttributeLocations;\n  }\n}\n", "\"use strict\";\n\nimport Renderer from \"../renderer\";\nimport ColourRendererData from \"../renderer/data/colour\";\nimport vertexShaderSource from \"./source/colour/vertexShader\";\nimport fragmentShaderSource from \"./source/colour/fragmentShader\";\nimport ColourRendererBuffers from \"../renderer/buffers/colour\";\nimport ColourUniformLocations from \"./locations/colour/uniform\";\nimport ColourAttributeLocations from \"./locations/colour/attribute\";\n\nimport { push } from \"../utilities/array\";\nimport { createProgram } from \"../renderer\";\n\nconst add = push; ///\n\nexport default class ColourRenderer extends Renderer {\n  getVertexColourAttributeLocation() {\n    const attributeLocations = this.getAttributeLocations(),\n          vertexColourAttributeLocation = attributeLocations.getVertexColourAttributeLocation();\n\n    return vertexColourAttributeLocation;\n  }\n\n  createBuffers(canvas) {\n    const facets = this.getFacets(),\n          vertexIndexes = [],\n          vertexNormals = [],\n          vertexPositions = [],\n          vertexColours = [];\n\n    facets.forEach((facet, index) => {\n      const colouredFacet = facet,  ///\n            facetVertexIndexes = facet.getVertexIndexes(index),\n            facetVertexNormals = facet.getVertexNormals(),\n            facetVertexPositions = facet.getVertexPositions(),\n            colouredFacetVertexColours = colouredFacet.getVertexColours();\n\n      add(vertexIndexes, facetVertexIndexes);\n      add(vertexNormals, facetVertexNormals);\n      add(vertexPositions, facetVertexPositions);\n      add(vertexColours, colouredFacetVertexColours);\n    });\n\n    const rendererData = this.getRendererData();\n\n    rendererData.addVertexIndexes(vertexIndexes);\n    rendererData.addVertexNormals(vertexNormals);\n    rendererData.addVertexColours(vertexColours);\n    rendererData.addVertexPositions(vertexPositions);\n\n    const rendererBuffers = this.getRendererBuffers(),\n          vertexPositionsData = rendererData.getVertexPositionsData(),\n          vertexNormalsData = rendererData.getVertexNormalsData(),\n          vertexIndexesData = rendererData.getVertexIndexesData(),\n          vertexColoursData = rendererData.getVertexColoursData();\n\n    rendererBuffers.createBuffers(vertexPositionsData, vertexNormalsData, vertexIndexesData, vertexColoursData, canvas);\n  }\n\n  bindBuffers(canvas) {\n    const rendererBuffers = this.getRendererBuffers(),\n          vertexNormalAttributeLocation = this.getVertexNormalAttributeLocation(),\n          vertexPositionAttributeLocation = this.getVertexPositionAttributeLocation(),\n          vertexColourAttributeLocation = this.getVertexColourAttributeLocation();\n    \n    rendererBuffers.bindBuffers(vertexNormalAttributeLocation, vertexPositionAttributeLocation, vertexColourAttributeLocation, canvas);\n  }\n\n  render(canvas, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix) {\n    const program = this.getProgram();\n\n    canvas.useProgram(program);\n\n    this.bindBuffers(canvas);\n\n    const renderer = this;  ///\n\n    canvas.render(renderer, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix);\n\n    const count = this.getCount(),\n          start = 0,\n          finish = count; ///\n\n    canvas.drawElements(start, finish);\n  }\n\n  static fromNothing(canvas) {\n    const facets = [],\n          program = createProgram(vertexShaderSource, fragmentShaderSource, canvas),\n          colourRendererData = ColourRendererData.fromNothing(),\n          colourRendererBuffers = ColourRendererBuffers.fromNothing(),\n          colourUniformLocations = ColourUniformLocations.fromProgram(program, canvas),\n          colourAttributeLocations = ColourAttributeLocations.fromProgram(program, canvas),\n          rendererData = colourRendererData,  ///\n          rendererBuffers = colourRendererBuffers,  ///\n          uniformLocations = colourUniformLocations,  ///\n          attributeLocations = colourAttributeLocations,  ///\n          colourRenderer = new ColourRenderer(facets, program, rendererData, rendererBuffers, uniformLocations, attributeLocations);\n    \n    return colourRenderer;\n  }\n}\n", "\"use strict\";\n\nimport lightingSource from \"../../source/lighting\";\nimport positionSource from \"../../source/position\";\n\nexport const textureCoordinateAttributeName = \"aTextureCoordinate\";\n\nconst vertexShaderSource = new String(`\n        \n        attribute vec2 ${textureCoordinateAttributeName};\n        \n        ${lightingSource}\n      \n        ${positionSource}\n\n        varying highp vec3 vLighting;\n        \n        varying highp vec2 vTextureCoordinate;\n        \n        void main() {\n          vLighting = calculateLighting();\n\n          gl_Position = calculatePosition();\n                    \n          vTextureCoordinate = ${textureCoordinateAttributeName};\n        }\n        \n      `);\n\nexport default vertexShaderSource;\n", "\"use strict\";\n\nimport RendererData from \"../../renderer/data\";\n\nimport { merge, flatten } from \"../../utilities/array\";\n\nconst add = merge;  ///\n\nexport default class TextureRendererData extends RendererData {\n  constructor(vertexPositionsData, vertexNormalsData, vertexIndexesData, vertexTextureCoordinatesData) {\n    super(vertexPositionsData, vertexNormalsData, vertexIndexesData);\n\n    this.vertexTextureCoordinatesData = vertexTextureCoordinatesData;\n  }\n\n  getVertexTextureCoordinatesData() {\n    return this.vertexTextureCoordinatesData;\n  }\n\n  addVertexTextureCoordinateTuples(vertexTextureCoordinateTuples) {\n    const vertexTextureCoordinatesData = flatten(vertexTextureCoordinateTuples);\n\n    add(this.vertexTextureCoordinatesData, vertexTextureCoordinatesData);\n  }\n\n  static fromNothing() { \n    const vertexTextureCoordinatesData = [],\n          textureRendererData = RendererData.fromNothing(TextureRendererData, vertexTextureCoordinatesData);\n    \n    return textureRendererData;\n  }\n}\n", "\"use strict\";\n\nexport const samplerName = \"uSampler\";\n\nconst fragmentShaderSource = new String(`\n        \n        uniform sampler2D ${samplerName};\n\n        varying highp vec3 vLighting;\n                   \n        varying highp vec2 vTextureCoordinate;\n        \n        void main() {\n          highp vec4 texelColour = texture2D(${samplerName}, vTextureCoordinate);\n          \n          gl_FragColor = vec4(texelColour.rgb * vLighting, texelColour.a);  \n        }\n        \n      `);\n\nexport default fragmentShaderSource;\n", "\"use strict\";\n\nimport RendererBuffers from \"../../renderer/buffers\";\n\nconst textureCoordinateComponents = 2;\n\nexport default class TextureRendererBuffers extends RendererBuffers {\n  constructor(vertexPositionsBuffer, vertexNormalsBuffer, vertexIndexesElementBuffer, textureCoordinatesBuffer) {\n    super(vertexPositionsBuffer, vertexNormalsBuffer, vertexIndexesElementBuffer);\n\n    this.textureCoordinatesBuffer = textureCoordinatesBuffer;\n  }\n\n  createTextureCoordinatesBuffer(textureCoordinatesData, canvas) {\n    this.textureCoordinatesBuffer = canvas.createBuffer(textureCoordinatesData);\n  }\n\n  bindTextureCoordinatesBuffer(textureCoordinateAttributeLocation, canvas) {\n    canvas.bindBuffer(this.textureCoordinatesBuffer, textureCoordinateAttributeLocation, textureCoordinateComponents);\n  }\n\n  createBuffers(vertexPositionsData, vertexNormalsData, vertexIndexesData, textureCoordinatesData, canvas) {\n    super.createBuffers(vertexPositionsData, vertexNormalsData, vertexIndexesData, canvas);\n\n    this.createTextureCoordinatesBuffer(textureCoordinatesData, canvas);\n  }\n\n  bindBuffers(vertexNormalAttributeLocation, vertexPositionAttributeLocation, textureCoordinateAttributeLocation, canvas) {\n    super.bindBuffers(vertexNormalAttributeLocation, vertexPositionAttributeLocation, canvas);\n\n    this.bindTextureCoordinatesBuffer(textureCoordinateAttributeLocation, canvas);\n  }\n\n  static fromNothing() {\n    const textureCoordinatesBuffer = null,  ///\n          textureRendererBuffers = RendererBuffers.fromNothing(TextureRendererBuffers, textureCoordinatesBuffer);\n    \n    return textureRendererBuffers;\n  }\n}\n", "\"use strict\";\n\nimport UniformLocations from \"../../locations/uniform\";\n\nimport { samplerName } from \"../../source/texture/fragmentShader\";\n\nexport default class TextureUniformLocations extends UniformLocations {\n  constructor(offsetsMatrixUniformLocation, normalsMatrixUniformLocation, positionMatrixUniformLocation, rotationsMatrixUniformLocation, projectionMatrixUniformLocation, samplerUniformLocation) {\n    super(offsetsMatrixUniformLocation, normalsMatrixUniformLocation, positionMatrixUniformLocation, rotationsMatrixUniformLocation, projectionMatrixUniformLocation);\n    \n    this.samplerUniformLocation = samplerUniformLocation;\n  }\n  \n  getSamplerUniformLocation() {\n    return this.samplerUniformLocation;\n  }\n\n  static fromProgram(program, canvas) {\n    const samplerUniformLocation = canvas.getUniformLocation(program, samplerName),\n          textureUniformLocations = UniformLocations.fromProgram(TextureUniformLocations, program, canvas, samplerUniformLocation);\n    \n    return textureUniformLocations;\n  }\n}\n", "\"use strict\";\n\nimport AttributeLocations from \"../../locations/attribute\";\n\nimport { textureCoordinateAttributeName } from \"../../source/texture/vertexShader\";\n\nexport default class TextureAttributeLocations extends AttributeLocations {\n  constructor(vertexPositionAttributeLocation, vertexNormalAttributeLocation, textureCoordinateAttributeLocation) {\n    super(vertexPositionAttributeLocation, vertexNormalAttributeLocation);\n    \n    this.textureCoordinateAttributeLocation = textureCoordinateAttributeLocation;\n  }\n  \n  getTextureCoordinateAttributeLocation() {\n    return this.textureCoordinateAttributeLocation;\n  }\n  \n  static fromProgram(program, canvas) {\n    const textureCoordinateAttributeLocation = canvas.getAttributeLocation(program, textureCoordinateAttributeName),\n          textureAttributeLocations = AttributeLocations.fromProgram(TextureAttributeLocations, program, canvas, textureCoordinateAttributeLocation);\n    \n    return textureAttributeLocations;\n  }  \n}\n", "\"use strict\";\n\nimport Renderer from \"../renderer\";\nimport vertexShaderSource from \"./source/texture/vertexShader\";\nimport TextureRendererData from \"../renderer/data/texture\";\nimport fragmentShaderSource from \"./source/texture/fragmentShader\";\nimport TextureRendererBuffers from \"../renderer/buffers/texture\";\nimport TextureUniformLocations from \"./locations/texture/uniform\";\nimport TextureAttributeLocations from \"./locations/texture/attribute\";\n\nimport { createProgram } from \"../renderer\";\n\nexport default class TextureRenderer extends Renderer {\n  getTextureCoordinateAttributeLocation() {\n    const attributeLocations = this.getAttributeLocations(),\n          textureCoordinateAttributeLocation = attributeLocations.getTextureCoordinateAttributeLocation();\n\n    return textureCoordinateAttributeLocation;\n  }\n\n  createBuffers(canvas) {\n    const rendererData = this.getRendererData(),\n          rendererBuffers = this.getRendererBuffers(),\n          vertexPositionsData = rendererData.getVertexPositionsData(),\n          vertexNormalsData = rendererData.getVertexNormalsData(),\n          vertexIndexesData = rendererData.getVertexIndexesData(),\n          vertexTextureCoordinatesData = rendererData.getVertexTextureCoordinatesData();\n\n    rendererBuffers.createBuffers(vertexPositionsData, vertexNormalsData, vertexIndexesData, vertexTextureCoordinatesData, canvas);\n  }\n\n  bindBuffers(canvas) {\n    const rendererBuffers = this.getRendererBuffers(),\n          vertexNormalAttributeLocation = this.getVertexNormalAttributeLocation(),\n          vertexPositionAttributeLocation = this.getVertexPositionAttributeLocation(),\n          textureCoordinateAttributeLocation = this.getTextureCoordinateAttributeLocation();\n\n    rendererBuffers.bindBuffers(vertexNormalAttributeLocation, vertexPositionAttributeLocation, textureCoordinateAttributeLocation, canvas);\n  }\n\n  useTexture(index, canvas) {\n    const uniformLocations = this.getUniformLocations(),\n          samplerUniformLocation = uniformLocations.getSamplerUniformLocation(),\n          samplerUniformLocationIntegerValue = index; ///\n\n    canvas.setUniformLocationIntegerValue(samplerUniformLocation, samplerUniformLocationIntegerValue);\n  }\n\n  static fromNothing(Class, canvas, ...remainingArguments) {\n    const facets = [],\n          program = createProgram(vertexShaderSource, fragmentShaderSource, canvas),\n          textureRendererData = TextureRendererData.fromNothing(),\n          textureRendererBuffers = TextureRendererBuffers.fromNothing(),\n          textureUniformLocations = TextureUniformLocations.fromProgram(program, canvas),\n          textureAttributeLocations = TextureAttributeLocations.fromProgram(program, canvas),\n          rendererData = textureRendererData,  ///\n          rendererBuffers = textureRendererBuffers, ///\n          uniformLocations = textureUniformLocations, ///\n          attributeLocations = textureAttributeLocations, ///\n          textureRenderer = new Class(facets, program, rendererData, rendererBuffers, uniformLocations, attributeLocations, ...remainingArguments);\n\n    canvas.enableAnisotropicFiltering();  ///\n\n    return textureRenderer;\n  }\n}\n", "\"use strict\";\n\nimport TextureRenderer from \"../../renderer/texture\";\n\nimport { push, first } from \"../../utilities/array\";\n\nconst add = push; ///\n\nexport default class ImagesTextureRenderer extends TextureRenderer {\n\tconstructor(facets, program, rendererData, rendererBuffers, uniformLocations, attributeLocations, imageNames, facetsMap, offsets) {\n\t\tsuper(facets, program, rendererData, rendererBuffers, uniformLocations, attributeLocations);\n\n\t\tthis.imageNames = imageNames;\n\n\t\tthis.facetsMap = facetsMap;\n\n\t\tthis.offsets = offsets;\n\t}\n\n\taddFacets(facets) {\n\t  const texturedFacets = facets,  ///\n          texturedFacetsLength = texturedFacets.length;\n\n\t  if (texturedFacetsLength > 0) {\n\t    const firstTexturedFacet = first(texturedFacets),\n            texturedFacet = firstTexturedFacet, ///\n            imageName = texturedFacet.getImageName(),\n            facets = this.facetsMap[imageName];\n\n\t    add(facets, texturedFacets)\n    }\n  }\n\n  createBuffers(canvas) {\n    const vertexIndexes = [],\n          vertexNormals = [],\n          vertexPositions = [],\n          vertexTextureCoordinateTuples = [];\n\n    let index = 0;\n\n    this.imageNames.forEach((imageName) => {\n      const facets = this.facetsMap[imageName];\n\n      facets.forEach((facet) => {\n        const texturedFacet = facet,  ///\n              facetVertexIndexes = facet.getVertexIndexes(index),\n              facetVertexNormals = facet.getVertexNormals(),\n              facetVertexPositions = facet.getVertexPositions(),\n              texturedFacetTextureCoordinateTuples = texturedFacet.getTextureCoordinateTuples(),\n              texturedFacetVertexTextureCoordinateTuples = texturedFacetTextureCoordinateTuples;  ///\n\n        add(vertexIndexes, facetVertexIndexes);\n        add(vertexNormals, facetVertexNormals);\n        add(vertexPositions, facetVertexPositions);\n        add(vertexTextureCoordinateTuples, texturedFacetVertexTextureCoordinateTuples);\n\n        index++;\n      });\n\n      const offset = index * 3;  ///\n\n      this.offsets.push(offset);\n    });\n\n    const rendererData = this.getRendererData();\n\n    rendererData.addVertexIndexes(vertexIndexes);\n    rendererData.addVertexNormals(vertexNormals);\n    rendererData.addVertexPositions(vertexPositions);\n    rendererData.addVertexTextureCoordinateTuples(vertexTextureCoordinateTuples);\n\n    super.createBuffers(canvas);\n  }\n\n  render(canvas, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix) {\n    const program = this.getProgram();\n\n    canvas.useProgram(program);\n\n    this.bindBuffers(canvas);\n\n    const renderer = this;  ///\n\n    canvas.render(renderer, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix);\n\n    let start,\n        finish = 0;  ///\n\n    this.offsets.forEach((offset, index) => {\n      start = finish; ///\n\n      finish = offset;  ///\n\n      this.useTexture(index, canvas);\n\n      canvas.drawElements(start, finish);\n    });\n  }\n\n  static fromImagesImageNamesAndImageTiling(images, imageNames, imageTiling, canvas) {\n    const offsets = [],\n          facetsMap = {};\n\n    images.forEach((image, index) => {\n      const facets = [],\n            repeat = imageTiling, ///\n            imageName = imageNames[index];\n\n      facetsMap[imageName] = facets;\n\n      canvas.createTexture(image, index, repeat);\n    });\n\n    const imagesTextureRenderer = TextureRenderer.fromNothing(ImagesTextureRenderer, canvas, imageNames, facetsMap, offsets);\n\n    return imagesTextureRenderer;\n  }\n}\n", "\"use strict\";\n\nimport TextureRenderer from \"../../renderer/texture\";\n\nimport { push } from \"../../utilities/array\";\n\nconst add = push; ///\n\nexport default class ImageMapTextureRenderer extends TextureRenderer {\n\tconstructor(facets, program, rendererData, rendererBuffers, uniformLocations, attributeLocations, imageMapJSON) {\n\t\tsuper(facets, program, rendererData, rendererBuffers, uniformLocations, attributeLocations);\n\n\t\tthis.imageMapJSON = imageMapJSON;\n\t}\n\n  createBuffers(canvas) {\n    const facets = this.getFacets(),\n          vertexIndexes = [],\n          vertexNormals = [],\n          vertexPositions = [],\n          vertexTextureCoordinateTuples = [];\n\n    facets.forEach((facet, index) => {\n      const texturedFacet = facet,  ///\n            facetVertexIndexes = facet.getVertexIndexes(index),\n            facetVertexNormals = facet.getVertexNormals(),\n            facetVertexPositions = facet.getVertexPositions(),\n            mappedTextureCoordinateTuples = texturedFacet.getMappedTextureCoordinateTuples(this.imageMapJSON),\n            texturedFacetVertexTextureCoordinateTuples = mappedTextureCoordinateTuples; ///\n\n      add(vertexIndexes, facetVertexIndexes);\n      add(vertexNormals, facetVertexNormals);\n      add(vertexPositions, facetVertexPositions);\n      add(vertexTextureCoordinateTuples, texturedFacetVertexTextureCoordinateTuples);\n    });\n\n    const rendererData = this.getRendererData();\n\n    rendererData.addVertexIndexes(vertexIndexes);\n    rendererData.addVertexNormals(vertexNormals);\n    rendererData.addVertexPositions(vertexPositions);\n    rendererData.addVertexTextureCoordinateTuples(vertexTextureCoordinateTuples);\n\n    super.createBuffers(canvas);\n  }\n\n  bindBuffers(canvas) {\n    const rendererBuffers = this.getRendererBuffers(),\n          vertexNormalAttributeLocation = this.getVertexNormalAttributeLocation(),\n          vertexPositionAttributeLocation = this.getVertexPositionAttributeLocation(),\n          textureCoordinateAttributeLocation = this.getTextureCoordinateAttributeLocation();\n\n    rendererBuffers.bindBuffers(vertexNormalAttributeLocation, vertexPositionAttributeLocation, textureCoordinateAttributeLocation, canvas);\n  }\n\n  useTexture(index, canvas) {\n    const uniformLocations = this.getUniformLocations(),\n          samplerUniformLocation = uniformLocations.getSamplerUniformLocation(),\n          samplerUniformLocationIntegerValue = index; ///\n\n    canvas.setUniformLocationIntegerValue(samplerUniformLocation, samplerUniformLocationIntegerValue);\n  }\n\n  render(canvas, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix) {\n    const program = this.getProgram();\n\n    canvas.useProgram(program);\n\n    this.bindBuffers(canvas);\n\n    const renderer = this;  ///\n\n    canvas.render(renderer, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix);\n\n    const rendererData = this.getRendererData(),\n          count = rendererData.getCount(),\n          index = 0,\n          start = 0,\n          finish = count; ///\n\n    this.useTexture(index, canvas);\n\n    canvas.drawElements(start, finish);\n  }\n\n  static fromImageMapAndImageMapJSON(imageMap, imageMapJSON, canvas) {\n    const image = imageMap, ///\n          index = 0,\n          repeat = false;\n\n    canvas.createTexture(image, index, repeat);\n\n    const imageMapTextureRenderer = TextureRenderer.fromNothing(ImageMapTextureRenderer, canvas, imageMapJSON);\n\n    return imageMapTextureRenderer;\n  }\n}\n", "\"use strict\";\n\nimport Element from \"../element\";\nimport ColourRenderer from \"../renderer/colour\";\nimport ImagesTextureRenderer from \"../renderer/texture/images\";\nimport ImageMapTextureRenderer from \"../renderer/texture/imageMap\";\n\nexport default class Part extends Element {\n  constructor(images, imageMap, imageNames, imageTiling, imageMapJSON, colourRenderer, textureRenderer, hidden) {\n    super();\n\n    this.images = images;\n    this.imageMap = imageMap;\n    this.imageNames = imageNames;\n    this.imageTiling = imageTiling;\n    this.imageMapJSON = imageMapJSON;\n    this.colourRenderer = colourRenderer;\n    this.textureRenderer = textureRenderer;\n\n    this.hidden = hidden;\n  }\n  \n  render(canvas, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix) {\n    this.colourRenderer && this.colourRenderer.render(canvas, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix);  ///\n\n    this.textureRenderer && this.textureRenderer.render(canvas, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix);  ///\n  }\n\n  initialise(canvas) {\n    let textureRenderer = null;\n\n    const colourRenderer = ColourRenderer.fromNothing(canvas);\n\n    if (this.images) {\n      const imagesTextureRenderer = ImagesTextureRenderer.fromImagesImageNamesAndImageTiling(this.images, this.imageNames, this.imageTiling, canvas);\n\n      textureRenderer = imagesTextureRenderer;  ///\n    }\n\n    if (this.imageMap) {\n      const imageMapTextureRenderer = ImageMapTextureRenderer.fromImageMapAndImageMapJSON(this.imageMap, this.imageMapJSON, canvas);\n\n      textureRenderer = imageMapTextureRenderer;  ///\n    }\n\n    const childElements = this.getChildElements();\n\n    childElements.forEach((childElement) => childElement.createFacets(this.hidden));\n\n    childElements.forEach((childElement) => childElement.amendFacets());\n\n    childElements.forEach((childElement) => childElement.addFacets(colourRenderer, textureRenderer));\n\n    colourRenderer && colourRenderer.createBuffers(canvas); ///\n\n    textureRenderer && textureRenderer.createBuffers(canvas); ///\n\n    this.colourRenderer = colourRenderer;\n\n    this.textureRenderer = textureRenderer;\n  }\n\n  static fromProperties(properties) {\n    const { images = null, imageMap = null, imageNames = null, imageTiling = false, imageMapJSON = null, hidden = false } = properties,\n          colourRenderer = null,  ///\n          textureRenderer = null, ///\n          part = Element.fromProperties(Part, properties, images, imageMap, imageNames, imageTiling, imageMapJSON, colourRenderer, textureRenderer, hidden);\n\n    return part;\n  }\n}\n", "\"use strict\";\n\nimport Element from \"../element\";\n\nexport default class Camera extends Element {\n  constructor(pan, tilt) {\n    super();\n\n    this.pan = pan;\n\n    this.tilt = tilt;\n  }\n\n  getPan() {\n    return this.pan;\n  }\n\n  getTilt() {\n    return this.tilt;\n  }\n\n  static fromProperties(Class, properties, ...remainingArguments) { return Element.fromProperties(Class, properties, ...remainingArguments); }\n}\n", "\"use strict\";\n\nimport { SHIFT_KEY_CODE } from \"../constants\";\n\nexport default class KeyEvents {\n  constructor(handlers, shiftKeyDown) {\n    this.handlers = handlers;\n    this.shiftKeyDown = shiftKeyDown;\n  }\n\n  isShiftKeyDown() {\n    return this.shiftKeyDown;\n  }\n\n  keyUpEventListener(event) {\n    const { keyCode } = event;\n\n    if (keyCode === SHIFT_KEY_CODE) {\n      this.shiftKeyDown = false;\n\n      this.handlers.forEach((handler) => handler(this.shiftKeyDown));\n    }\n  }\n\n  keyDownEventListener(event) {\n    const { keyCode } = event;\n\n    if (keyCode === SHIFT_KEY_CODE) {\n      this.shiftKeyDown = true;\n\n      this.handlers.forEach((handler) => handler(this.shiftKeyDown));\n    }\n  }\n\n  addShiftKeyHandler(shiftKeyHandler) {\n    const handler = shiftKeyHandler;  ///\n\n    this.handlers.push(handler);\n  }\n\n  initialise(canvas) {\n    const documentDOMElement = document.documentElement,  ///\n          keyUpEventListener = this.keyUpEventListener.bind(this),\n          keyDownEventListener = this.keyDownEventListener.bind(this);\n\n    documentDOMElement.addEventListener(\"keyup\", keyUpEventListener);\n\n    documentDOMElement.addEventListener(\"keydown\", keyDownEventListener);\n  }\n\n  static fromNothing() {\n    const handlers = [],\n          shiftKeyDown = false,  ///\n          keyEvents = new KeyEvents(handlers, shiftKeyDown);\n\n    return keyEvents;\n  }\n}\n", "\"use strict\";\n\nimport { MOUSE_UP, MOUSE_DOWN, MOUSE_MOVE, MOUSE_WHEEL } from \"../constants\";\n\nexport default class MouseEvents {\n  constructor(handlersMap, mouseDown) {\n    this.handlersMap = handlersMap;\n    this.mouseDown = mouseDown;\n  }\n\n  mouseEventListener(event, eventType) {\n    const handlers = this.handlersMap[eventType],\n          mouseCoordinates = mouseCoordinatesFromEvent(event);\n\n    handlers.forEach((handler) => handler(mouseCoordinates, this.mouseDown));\n\n    event.preventDefault();\n  }\n\n  mouseUpEventListener(event) {\n    this.mouseDown = false;\n\n    this.mouseEventListener(event, MOUSE_UP);\n  }\n\n\tmouseDownEventListener(event) {\n    this.mouseDown = true;\n\n    this.mouseEventListener(event, MOUSE_DOWN);\n  }\n\n\tmouseMoveEventListener(event) {\n    this.mouseEventListener(event, MOUSE_MOVE);\n  }\n\n  mouseWheelEventListener(event) {\n    const handlers = this.handlersMap[ MOUSE_WHEEL ],\n          mouseWheelDelta = mouseWheelDeltaFromEvent(event);\n\n    handlers.forEach((handler) => handler(mouseWheelDelta));\n\n\t\tevent.preventDefault();\n  }\n\n  addMouseUpHandler(mouseUpHandler) {\n    const mouseUpHandlers = this.handlersMap[ MOUSE_UP ];\n\n    mouseUpHandlers.push(mouseUpHandler);\n  }\n\n  addMouseDownHandler(mouseDownHandler) {\n    const mouseDownHandlers = this.handlersMap[ MOUSE_DOWN ];\n\n    mouseDownHandlers.push(mouseDownHandler);\n  }\n\n  addMouseMoveHandler(mouseMoveHandler) {\n    const mouseMoveHandlers = this.handlersMap[ MOUSE_MOVE ];\n\n    mouseMoveHandlers.push(mouseMoveHandler);\n  }\n\n  addMouseWheelHandler(mouseWheelHandler) {\n    const mouseWheelHandlers = this.handlersMap[ MOUSE_WHEEL ];\n\n    mouseWheelHandlers.push(mouseWheelHandler);\n  }\n\n  initialise(canvas) {\n      const canvasDOMElement = canvas.getDOMElement(),\n            mouseUpEventListener = this.mouseUpEventListener.bind(this),\n            mouseDownEventListener = this.mouseDownEventListener.bind(this),\n            mouseMoveEventListener = this.mouseMoveEventListener.bind(this),\n            mouseWheelEventListener = this.mouseWheelEventListener.bind(this);\n\n    this.handlersMap[ MOUSE_UP ] = [];\n    this.handlersMap[ MOUSE_DOWN ] = [];\n    this.handlersMap[ MOUSE_MOVE ] = [];\n    this.handlersMap[ MOUSE_WHEEL ] = [];\n\n    canvasDOMElement.addEventListener(\"mouseup\", mouseUpEventListener);\n\n    canvasDOMElement.addEventListener(\"mousedown\", mouseDownEventListener);\n\n    canvasDOMElement.addEventListener(\"mousemove\", mouseMoveEventListener);\n\n    canvasDOMElement.addEventListener(\"mousewheel\", mouseWheelEventListener);\n  }\n\n  static fromNothing() {\n    const handlersMap = {},\n          mouseDown = false,  ///\n\t\t\t\t\tmouseEvents = new MouseEvents(handlersMap, mouseDown);\n\n    return mouseEvents;\n  }\n}\n\nfunction mouseWheelDeltaFromEvent(event) {\n  const mouseWheelDelta = Math.max(-1, Math.min(1, event.wheelDelta)); ///\n\n  return mouseWheelDelta;\n}\n\nfunction mouseCoordinatesFromEvent(event) {\n  const { target, clientX, clientY } = event,\n        canvasDOMElement = target,  ///\n        boundingClientRect = canvasDOMElement.getBoundingClientRect(),\n        top = boundingClientRect.top,\n        left = boundingClientRect.left,\n        mouseCoordinates = [\n\n          clientX - left,\n\n          top - clientY,\n\n        ];\n\n  return mouseCoordinates;\n}\n", "\"use strict\";\n\nimport KeyEvents from \"./keyEvents\";\nimport MouseEvents from \"./mouseEvents\";\n\nimport { zero2, subtract2 } from \"../maths/vector\";\n\nexport default class UserInput {\n  constructor(handlers, keyEvents, mouseEvents, mouseCoordinates, previousMouseCoordinates) {\n    this.handlers = handlers;\n    this.keyEvents = keyEvents;\n    this.mouseEvents = mouseEvents;\n    this.mouseCoordinates = mouseCoordinates;\n    this.previousMouseCoordinates = previousMouseCoordinates;\n  }\n\n  mouseMoveHandler(mouseCoordinates, mouseDown, canvas) {\n    this.previousMouseCoordinates = this.mouseCoordinates;  ///\n\n    this.mouseCoordinates = mouseCoordinates;\n\n    if (this.previousMouseCoordinates === null) {\n      return;\n    }\n\n    if (mouseDown) {\n      const mouseWheelDelta = 0,  ///\n            shiftKeyDown = this.keyEvents.isShiftKeyDown(),\n            relativeMouseCoordinates = subtract2(this.mouseCoordinates, this.previousMouseCoordinates);\n\n      this.handlers.forEach((handler) => handler(relativeMouseCoordinates, mouseWheelDelta, shiftKeyDown));\n    }\n  }\n\n  mouseWheelHandler(mouseWheelDelta, canvas) {\n    const shiftKeyDown = this.keyEvents.isShiftKeyDown(),\n          relativeMouseCoordinates = zero2();\n\n    this.handlers.forEach((handler) => handler(relativeMouseCoordinates, mouseWheelDelta, shiftKeyDown));\n  }\n\n  addUserInputHandler(userInputHandler) {\n    const handler = userInputHandler; ///\n\n    this.handlers.push(handler);\n  }\n\n  initialise(canvas) {\n    const mouseMoveHandler = this.mouseMoveHandler.bind(this),\n          mouseWheelHandler = this.mouseWheelHandler.bind(this);\n\n    this.keyEvents.initialise(canvas);\n\n    this.mouseEvents.initialise(canvas);\n\n    this.mouseEvents.addMouseMoveHandler(mouseMoveHandler);\n\n    this.mouseEvents.addMouseWheelHandler(mouseWheelHandler);\n  }\n\n  static fromNothing() {\n    const handlers = [],\n          keyEvents = KeyEvents.fromNothing(),\n          mouseEvents = MouseEvents.fromNothing(),\n          mouseCoordinates = null,  ///\n          previousMouseCoordinates = null,  ///\n          userInput = new UserInput(handlers, keyEvents, mouseEvents, mouseCoordinates, previousMouseCoordinates);\n\n    return userInput;\n  }\n}\n", "\"use strict\";\n\nimport { asynchronousUtilities } from \"necessary\";\n\nimport Part from \"../element/part\";\nimport Camera from \"../element/camera\";\nimport Element from \"../element\";\nimport UserInput from \"../miscellaneous/userInput\";\n\nimport { zero2 } from \"../maths/vector\";\n\nconst { forEach } = asynchronousUtilities;\n\nexport default class Scene extends Element {\n  constructor(parts, camera, canvas) {\n    super();\n\n    this.parts = parts;\n\n    this.camera = camera;\n\n    this.canvas = canvas;\n  }\n\n  windowResizeHandler() {\n    const clientWidth = this.canvas.getClientWidth(),\n          clientHeight = this.canvas.getClientHeight(),\n          width = clientWidth,  ///\n          height = clientHeight,  ///\n          render = this.render.bind(this),\n          callback = render;  ///\n\n    this.canvas.resize(width, height);\n\n    const relativeMouseCoordinates = zero2(), ///\n          mouseWheelDelta = 0,  ///\n          shiftKeyDown = false; ///\n\n    this.camera.update(relativeMouseCoordinates, mouseWheelDelta, shiftKeyDown, width, height, callback);\n  }\n\n  userInputHandler(relativeMouseCoordinates, mouseWheelDelta, shiftKeyDown) {\n    const width = this.canvas.getWidth(),\n          height = this.canvas.getHeight(),\n          render = this.render.bind(this),\n          callback = render;  ///\n\n    this.camera.update(relativeMouseCoordinates, mouseWheelDelta, shiftKeyDown, width, height, callback);\n  }\n\n  render(offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix) {\n    this.canvas.clear();\n\n    this.parts.forEach((part) => part.render(this.canvas, offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix));\n  }\n\n  initialise(canvas, update, done) {\n    const userInput = UserInput.fromNothing(),\n          userInputHandler = this.userInputHandler.bind(this),\n          windowResizeHandler = this.windowResizeHandler.bind(this);\n\n    userInput.initialise(canvas);\n\n    initialiseParts(this.parts, update, canvas, () => {\n      window.onresize = windowResizeHandler;\n\n      userInput.addUserInputHandler(userInputHandler);\n\n      this.windowResizeHandler(); ///\n\n      done && done(); ///\n    });\n  }\n\n  static fromProperties(properties) {\n    const { canvas, done, update, childElements } = properties,\n          parts = partsFromChildElements(childElements),\n          camera = cameraFromChildElements(childElements),\n          scene = Element.fromProperties(Scene, properties, parts, camera, canvas);\n\n    scene.initialise(canvas, update, done);\n\n    return scene;\n  }\n}\n\nfunction defer(callback) {\n  setTimeout(callback, 0);\n}\n\nfunction initialiseParts(parts, update, canvas, done) {\n  forEach(parts, (part, next, done, context, index) => {\n    const partsLength = parts.length,\n          progress = ( index + 1 ) / partsLength;\n\n    part.initialise(canvas);\n\n    defer(() => {\n      update && update(progress); ///\n\n      next();\n    });\n  }, done);\n}\n\nfunction partsFromChildElements(childElements) {\n  const parts = childElements.reduce((parts, childElement) => {\n    if (childElement instanceof Part) {\n      const part = childElement;  ///\n\n      parts.push(part);\n    }\n    return parts;\n  }, []);\n\n  return parts;\n}\n\nfunction cameraFromChildElements(childElements) {\n  const camera = childElements.reduce((camera, childElement) => {\n    if (camera === null) {\n      if (childElement instanceof Camera) {\n        camera = childElement;  ///\n      }\n    }\n\n    return camera;\n  }, null);\n\n  return camera;\n}\n", "\"use strict\";\n\nimport { reflect3, transform4 } from \"../maths/vector\";\nimport { rotationsMatrixFromAngles } from \"../utilities/matrix\";\n\nexport function relativeOffsetsFromAnglesAndDirections(angles, directions) {\n  const reverseOrder = true,\n        reflectedAngles = reflect3(angles),\n        rotationsMatrix = rotationsMatrixFromAngles(reflectedAngles, reverseOrder),\n        relativeOffsets = transform4(directions, rotationsMatrix).slice(0, 3); ///\n\n  return relativeOffsets;\n}\n", "\"use strict\";\n\nimport { add3, scale2, reflect2, scale3 } from \"../maths/vector\";\nimport { relativeOffsetsFromAnglesAndDirections } from \"../utilities/offsets\";\nimport { DELTA_SCALAR, INVERT_SCALAR, OFFSET_SCALAR } from \"../constants\";\n\nexport default class Pan {\n  constructor(offsets) {\n    this.offsets = offsets;\n  }\n\n  getOffsets() {\n    return this.offsets;\n  }\n\n  updateOffsets(relativeMouseCoordinates, mouseWheelDelta, tilt) {\n    const angles = tilt.getAngles(),\n          scaledMouseWheelDelta = mouseWheelDelta * DELTA_SCALAR,\n          scaledReflectedRelativeMouseCoordinates = reflect2(scale2(relativeMouseCoordinates, OFFSET_SCALAR)),\n          directions = [ ...scaledReflectedRelativeMouseCoordinates, scaledMouseWheelDelta, 0 ],\n          relativeOffsets = relativeOffsetsFromAnglesAndDirections(angles, directions);\n\n    this.offsets = add3(this.offsets, relativeOffsets);\n  }\n\n  static fromInitialOffsets(initialOffsets) {\n    const offsets = initialOffsets, ///\n          pan = new Pan(offsets);\n\n    return pan;\n  }\n\n  static fromInitialPosition(initialPosition) {\n    const offsets = scale3(initialPosition, INVERT_SCALAR),\n          pan = new Pan(offsets);\n    \n    return pan;\n  }\n}\n", "\"use strict\";\n\nimport { first, second } from \"../utilities/array\";\nimport { add3, transform3 } from \"../maths/vector\";\nimport { ANGLES_SCALAR, DEGREES_TO_RADIANS_SCALAR } from \"../constants\";\n\nexport default class Tilt {\n  constructor(angles, flipped) {\n    this.angles = angles;\n    this.flipped = flipped;\n  }\n\n  getXAngle() {\n    const firstAngle = first(this.angles),\n          xAngle = firstAngle;  ///\n\n    return xAngle;\n  }\n  \n  getYAngle() {\n    const secondAngle = second(this.angles),\n          yAngle = secondAngle; ///\n\n    return yAngle;\n  }\n\n  getZAngle() {\n    const zAngle = 0;\n\n    return zAngle;\n  }\n  \n  getAngles() {\n    return this.angles;\n  }\n  \n  updateAngles(relativeMouseCoordinates) {\n    const scalar = this.flipped ?\n                     +ANGLES_SCALAR :\n                       -ANGLES_SCALAR,\n          matrix = [\n\n                  0, scalar, 0,\n            -scalar,      0, 0,\n                  0,      0, 0,\n\n          ],\n          relativeAngles = transform3([ ...relativeMouseCoordinates, 0 ], matrix);  ///\n\n    this.angles = add3(this.angles, relativeAngles);\n  }\n\n  static fromInitialAnglesAndFlipped(initialAngles, flipped) {\n    const scalar = flipped ?\n                     +DEGREES_TO_RADIANS_SCALAR :\n                       -DEGREES_TO_RADIANS_SCALAR,\n          matrix = [\n\n                  0, scalar, 0,\n            -scalar,      0, 0,\n                  0,      0, 0,\n\n          ],\n          angles = transform3([ ...initialAngles, 0 ], matrix), ///\n          tilt = new Tilt(angles, flipped);\n\n    return tilt;\n  }\n}\n", "\"use strict\";\n\nimport Pan from \"../../miscellaneous/pan\";\nimport Tilt from \"../../miscellaneous/tilt\";\n\nimport Camera from \"../camera\";\n\nimport { zero2 } from \"../../maths/vector\";\nimport { offsetsMatrixFromOffsets,\n         rotationsMatrixFromAngles,\n         positionMatrixFromNothing,\n         normalsMatrixFromRotationsMatrix,\n         projectionMatrixFromWidthAndHeight } from \"../../utilities/matrix\";\n\nconst defaultInitialAngles = zero2(),\n      defaultInitialPosition = [ 0, 0, 5 ];\n\n\nexport default class GamingCamera extends Camera {\n\n\n\n\n\n\n  update(relativeMouseCoordinates, mouseWheelDelta, shiftKeyDown, width, height, callback) {\n    const pan = this.getPan(),\n          tilt = this.getTilt();\n\n    if (false) {\n      ///\n    } else if (shiftKeyDown) {\n      pan.updateOffsets(relativeMouseCoordinates, mouseWheelDelta, tilt);\n    } else if (mouseWheelDelta !== 0) {\n      pan.updateOffsets(relativeMouseCoordinates, mouseWheelDelta, tilt);\n    } else {\n      tilt.updateAngles(relativeMouseCoordinates);\n    }\n\n    const angles = tilt.getAngles(),\n          offsets = pan.getOffsets(),\n\n          offsetsMatrix = offsetsMatrixFromOffsets(offsets),\n          positionMatrix = positionMatrixFromNothing(),\n          rotationsMatrix = rotationsMatrixFromAngles(angles),\n          projectionMatrix = projectionMatrixFromWidthAndHeight(width, height),\n          normalsMatrix = normalsMatrixFromRotationsMatrix(rotationsMatrix);\n\n    callback(offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix);\n  }\n\n  static fromProperties(properties) {\n    const { initialAngles = defaultInitialAngles, initialPosition = defaultInitialPosition } = properties,\n          flipped = true,\n          pan = Pan.fromInitialPosition(initialPosition),\n          tilt = Tilt.fromInitialAnglesAndFlipped(initialAngles, flipped),\n\n          gamingCamera = Camera.fromProperties(GamingCamera, properties, pan, tilt);\n\n    return gamingCamera;\n  }\n}\n", "\"use strict\";\n\nimport { DELTA_SCALAR, MINIMUM_DISTANCE } from \"../constants\";\n\nexport default class Zoom {\n  constructor(distance) {\n    this.distance = distance;\n  }\n\n  getDistance() {\n    return this.distance;\n  }\n\n  updateDistance(mouseWheelDelta) {\n    this.distance -= mouseWheelDelta * DELTA_SCALAR;\n\n    this.distance = Math.max(MINIMUM_DISTANCE, this.distance);\n  }\n  \n  static fromInitialDistance(initialDistance) {\n    const distance = initialDistance, ///\n          zoom = new Zoom(distance);\n    \n    return zoom;\n  }\n}\n", "\"use strict\";\n\nimport Pan from \"../../miscellaneous/pan\";\nimport Tilt from \"../../miscellaneous/tilt\";\nimport Zoom from \"../../miscellaneous/zoom\";\nimport Camera from \"../camera\";\n\nimport { zero2, zero3 } from \"../../maths/vector\";\nimport { offsetsMatrixFromOffsets,\n         rotationsMatrixFromAngles,\n         positionMatrixFromDistance,\n         normalsMatrixFromRotationsMatrix,\n         projectionMatrixFromWidthAndHeight } from \"../../utilities/matrix\";\n\nconst defaultInitialAngles = zero2(),\n      defaultInitialOffsets = zero3(),\n      defaultInitialDistance = 5;\n\nexport default class DesignCamera extends Camera {\n  constructor(pan, tilt, zoom) {\n    super(pan, tilt);\n\n    this.zoom = zoom;\n  }\n\n  update(relativeMouseCoordinates, mouseWheelDelta, shiftKeyDown, width, height, callback) {\n    const pan = this.getPan(),\n          tilt = this.getTilt();\n\n    if (false) {\n      ///\n    } else if (shiftKeyDown) {\n      pan.updateOffsets(relativeMouseCoordinates, mouseWheelDelta, tilt);\n    } else if (mouseWheelDelta !== 0) {\n      this.zoom.updateDistance(mouseWheelDelta);\n    } else {\n      tilt.updateAngles(relativeMouseCoordinates);\n    }\n\n    const angles = tilt.getAngles(),\n          offsets = pan.getOffsets(),\n          distance = this.zoom.getDistance(),\n          offsetsMatrix = offsetsMatrixFromOffsets(offsets),\n          positionMatrix = positionMatrixFromDistance(distance),\n          rotationsMatrix = rotationsMatrixFromAngles(angles),\n          projectionMatrix = projectionMatrixFromWidthAndHeight(width, height),\n          normalsMatrix = normalsMatrixFromRotationsMatrix(rotationsMatrix);\n\n    callback(offsetsMatrix, normalsMatrix, positionMatrix, rotationsMatrix, projectionMatrix);\n  }\n\n  static fromProperties(properties) {\n    const { initialAngles = defaultInitialAngles, initialOffsets = defaultInitialOffsets, initialDistance = defaultInitialDistance } = properties,\n          flipped = false,\n          pan = Pan.fromInitialOffsets(initialOffsets),\n          tilt = Tilt.fromInitialAnglesAndFlipped(initialAngles, flipped),\n          zoom = Zoom.fromInitialDistance(initialDistance),\n          designCamera = Camera.fromProperties(DesignCamera, properties, pan, tilt, zoom);\n\n    return designCamera;\n  }\n}\n", "\"use strict\";\n\nimport { first, second, third } from \"../utilities/array\";\nimport { normalise3, subtract3, cross3 } from \"../maths/vector\";\n\nexport default class Normal {\n  constructor(extent) {\n    this.extent = extent;\n  }\n\n  clone() {\n    const extent = cloneExtent(this.extent),\n          normal = new Normal(extent);\n\n    return normal;\n  }\n\n  getExtent() {\n    return this.extent;\n  }\n  \n  static fromVertices(vertices) {\n    const firstVertex = first(vertices),\n          secondVertex = second(vertices),\n          thirdVertex = third(vertices),\n          firstPosition = firstVertex.getPosition(),\n          secondPosition = secondVertex.getPosition(),\n          thirdPosition = thirdVertex.getPosition(),\n          firstExtent = subtract3(secondPosition, firstPosition),\n          secondExtent = subtract3(thirdPosition, firstPosition),\n          extent = normalise3(cross3(firstExtent, secondExtent)),\n          normal = new Normal(extent);\n\n    return normal;\n  }\n}\n\nfunction cloneExtent(extent) { return extent.slice(); }\n", "\"use strict\";\n\nimport { rotatePosition } from \"../utilities/rotation\";\n\nexport default class Vertex {\n  constructor(position) {\n    this.position = position;\n  }\n\n  getPosition() {\n    return this.position;\n  }\n\n  clone() {\n    const position = this.position.slice(), ///\n          vertex = new Vertex(position);\n\n    return vertex;\n  }\n\n  rotate(rotationQuaternion) {\n    this.position = rotatePosition(this.position, rotationQuaternion);\n  }\n\n  applyTransform(transform) {\n    this.position = transform(this.position);\n  }\n\n  static fromPosition(position) {\n    const vertex = new Vertex(position);\n    \n    return vertex;\n  }\n  \n  static fromCoordinateTuple(coordinateTuple) {\n    const position = coordinateTuple.slice(), ///\n          vertex = new Vertex(position);\n\n    return vertex;\n  }\n}\n", "\"use strict\";\n\nimport { VERTICES_LENGTH } from \"../constants\";\nimport { first, second, third } from \"../utilities/array\";\nimport { subtract3, cross3, length3 } from \"../maths/vector\";\n\nexport function cloneEdges(edges) {\n  edges = edges.map((edge) => edge.clone());\n\n  return edges;\n}\n\nexport function cloneNormal(normal) {\n  normal = normal.clone();\n  \n  return normal;\n}\n\nexport function cloneVertices(vertices) {\n  vertices = vertices.map((vertex) => vertex.clone());\n\n  return vertices;\n}\n\nexport function calculateEdges(vertices, Edge) {\n  const edges = vertices.map((vertex, index) => {\n    const startIndex = index, ///\n          endIndex = (startIndex + 1) % VERTICES_LENGTH,\n          startVertex = vertices[startIndex],\n          endVertex = vertices[endIndex],\n          edge = Edge.fromStartVertexAndEndVertex(startVertex, endVertex);\n\n    return edge;\n  });\n\n  return edges;\n}\n\nexport function calculateNormal(vertices, Normal) {\n  const normal = Normal.fromVertices(vertices);\n\n  return normal;\n}\n\nexport function calculateArea(vertices) {\n  const firstVertex = first(vertices),\n        secondVertex = second(vertices),\n        thirdVertex = third(vertices),\n        firstVertexPosition = firstVertex.getPosition(),\n        secondVertexPosition = secondVertex.getPosition(),\n        thirdVertexPosition = thirdVertex.getPosition(),\n        firstExtent = subtract3(secondVertexPosition, firstVertexPosition),\n        secondExtent = subtract3(thirdVertexPosition, firstVertexPosition),\n        area = length3(cross3(firstExtent, secondExtent)) / 2;\n\n  return area;\n}\n", "\"use strict\";\n\nimport Edge from \"./edge\";\nimport Normal from \"./normal\";\nimport Vertex from \"./vertex\";\n\nimport { push, permute } from \"../utilities/array\";\nimport { VERTICES_LENGTH } from \"../constants\";\nimport { calculateEdges, calculateNormal } from \"../utilities/facet\";\nimport { calculateMidPointPosition, isMidPointPositionToOneSideOfMaskingEdges } from \"../utilities/midPoint\";\nimport { calculateNonNullIntersections,\n         calculateNullIntersectionIndex,\n         calculateNonNullIntersectionIndex,\n         calculateIntermediateVertexPosition} from \"../utilities/intersection\";\n\nexport default class Facet {\n  constructor(vertices, normal, edges) {\n    this.vertices = vertices;\n    this.normal = normal;\n    this.edges = edges;\n  }\n\n  getVertices() {\n    return this.vertices;\n  }\n\n  getNormal() {\n    return this.normal;\n  }\n\n  getEdges() {\n    return this.edges;\n  }\n  \n  getVertexPositions() {\n    const vertexPositions = this.vertices.map((vertex) => vertex.getPosition());\n    \n    return vertexPositions;\n  }\n  \n  getVertexNormals() {\n    const normalExtent = this.normal.getExtent(),\n          vertexNormal = normalExtent,  ///\n          vertexNormals = [\n            vertexNormal,\n            vertexNormal,\n            vertexNormal,\n          ];\n    \n    return vertexNormals;\n  }\n  \n  getVertexIndexes(index) {\n    const vertexIndex = index * 3,\n          vertexIndexes = [\n            vertexIndex + 0,\n            vertexIndex + 1,\n            vertexIndex + 2,\n          ];\n    \n    return vertexIndexes;\n  }\n\n  isMasked(maskingFacet) {\n    const maskingEdges = maskingFacet.getMaskingEdges(),\n          midPointPosition = calculateMidPointPosition(this.vertices),\n          midPointPositionToOneSideOfMaskingEdges = isMidPointPositionToOneSideOfMaskingEdges(midPointPosition, maskingEdges),\n          masked = midPointPositionToOneSideOfMaskingEdges;  ///\n    \n    return masked;\n  }\n\n  permute(places) {\n    this.vertices = permute(this.vertices, places);\n\n    this.normal = calculateNormal(this.vertices, Normal);\n\n    this.edges = calculateEdges(this.vertices, Edge);\n  }\n\n  rotate(rotationQuaternion) {\n    this.vertices.forEach((vertex) => vertex.rotate(rotationQuaternion));\n\n    this.normal = calculateNormal(this.vertices, Normal);\n\n    this.edges = calculateEdges(this.vertices, Edge);\n  }\n\n  applyTransform(transform) {\n    this.vertices.forEach((vertex) => vertex.applyTransform(transform));\n\n    this.normal = calculateNormal(this.vertices, Normal);\n\n    this.edges = calculateEdges(this.vertices, Edge);\n  }\n\n  splitWithIntersections(intersections, smallerFacets) {\n    const nonNullIntersections = calculateNonNullIntersections(intersections),\n          nonNullIntersectionsLength = nonNullIntersections.length;\n\n    switch (nonNullIntersectionsLength) {\n      case 2 :\n        this.splitWithTwoNonNullIntersections(intersections, smallerFacets);\n        break;\n\n      case 1 :\n        this.splitWithOneNonNullIntersection(intersections, smallerFacets);\n        break;\n\n      case 0 :\n        this.splitWithNoNonNullIntersections(intersections, smallerFacets);\n        break;\n    }\n  }\n  \n  splitWithTwoNonNullIntersections(intersections, smallerFacets) {\n    const nullIntersectionIndex = calculateNullIntersectionIndex(intersections),\n          places = (VERTICES_LENGTH - nullIntersectionIndex) % VERTICES_LENGTH;\n\n    intersections = permute(intersections, places);\n\n    intersections = intersections.slice(1); ///\n\n    this.permute(places);\n\n    const startVertexPositionIndexes = [ 1, 2 ],\n          endVertexPositionIndexes = [ 2, 0 ],\n          indexTuples = [\n\n            [ 0, 1, 3 ],\n            [ 3, 4, 0 ],\n            [ 3, 2, 4 ],\n\n          ];\n\n    this.splitWithIndexTuplesAndIntersections(startVertexPositionIndexes, endVertexPositionIndexes, indexTuples, intersections, smallerFacets);\n  }\n\n  splitWithOneNonNullIntersection(intersections, smallerFacets) {\n    const nonNullIntersectionIndex = calculateNonNullIntersectionIndex(intersections),\n          places = (VERTICES_LENGTH - nonNullIntersectionIndex) % VERTICES_LENGTH;\n\n    intersections = permute(intersections, places);\n\n    intersections = intersections.slice(0, 1);  ///\n\n    this.permute(places);\n\n    const startVertexPositionIndexes = [ 0 ],\n          endVertexPositionIndexes = [ 1 ],\n          indexTuples = [\n\n            [ 0, 3, 2 ],\n            [ 3, 1, 2 ],\n\n          ];\n\n    this.splitWithIndexTuplesAndIntersections(startVertexPositionIndexes, endVertexPositionIndexes, indexTuples, intersections, smallerFacets);\n  }\n\n  splitWithNoNonNullIntersections(intersections, smallerFacets) {\n    const smallerFacet = this.fromVertices(this.vertices);  ///\n\n    smallerFacets.push(smallerFacet);\n  }\n\n  splitWithIndexTuplesAndIntersections(startVertexPositionIndexes, endVertexPositionIndexes, indexTuples, intersections, smallerFacets) {\n    const vertexPositions = this.getVertexPositions(),\n          intermediateVertexPositions = intersections.map((intersection, index) => {\n            const startVertexPositionIndex = startVertexPositionIndexes[index],\n                  endVertexPositionIndex = endVertexPositionIndexes[index],\n                  startVertexPosition = vertexPositions[startVertexPositionIndex],\n                  endVertexPosition = vertexPositions[endVertexPositionIndex],\n                  intermediateVertexPosition = calculateIntermediateVertexPosition(startVertexPosition, endVertexPosition, intersection);\n\n            return intermediateVertexPosition;\n          });\n\n    push(vertexPositions, intermediateVertexPositions);\n\n    indexTuples.forEach((indexTuple) => {\n      const positions = vertexPositions,  ///\n            indexes = indexTuple,  ///\n            facet = this, \n            smallerFacet = smallerFacetFromPositionsIndexesAndFacet(positions, indexes, facet);\n\n      if (smallerFacet !== null) {\n        smallerFacets.push(smallerFacet);\n      }\n    });\n  }\n}\n\nfunction smallerFacetFromPositionsIndexesAndFacet(positions, indexes, facet) {\n  const vertices = indexes.map((index) => {\n          let position = positions[index];\n    \n          position = position.slice(); ///\n    \n          const vertex = Vertex.fromPosition(position);\n\n          return vertex;\n        }),\n        smallerFacet = facet.fromVertices(vertices);\n\n  return smallerFacet;\n}\n", "\"use strict\";\n\nimport Edge from \"../edge\";\nimport Facet from \"../facet\";\nimport Normal from \"../normal\";\nimport Vertex from \"../vertex\";\n\nimport { isApproximatelyEqualToZero } from \"../../utilities/approximate\";\nimport { verticesFromCoordinateTuplesAndIndexTuple } from \"../../utilities/vertices\";\nimport { cloneEdges, cloneNormal, cloneVertices, calculateArea, calculateEdges, calculateNormal } from \"../../utilities/facet\";\n\nexport default class ColouredFacet extends Facet {\n  constructor(vertices, normal, edges, rgba) {\n    super(vertices, normal, edges);\n    \n    this.rgba = rgba;\n  }\n\n  clone() {\n    let vertices = this.getVertices(),\n        normal = this.getNormal(),\n        edges = this.getEdges();\n\n    vertices = cloneVertices(vertices);\n    normal = cloneNormal(normal);\n    edges = cloneEdges(edges);\n\n    const rgba = this.rgba,\n          colouredFacet = new ColouredFacet(vertices, normal, edges, rgba);\n\n    return colouredFacet;\n  }\n\n  getVertexColours() {\n    const vertexColour = this.rgba, ///\n          vertexColours = [\n            vertexColour,\n            vertexColour,\n            vertexColour,\n          ];\n    \n    return vertexColours;\n  }\n\n  fromVertices(vertices) {\n    let colouredFacet = null;\n\n    const area = calculateArea(vertices),\n          areaApproximatelyEqualToZero = isApproximatelyEqualToZero(area),\n          largeEnough = !areaApproximatelyEqualToZero;  ///\n\n    if (largeEnough) {\n      const rgba = this.rgba,\n            normal = calculateNormal(vertices, Normal),\n            edges = calculateEdges(vertices, Edge);\n\n      colouredFacet = new ColouredFacet(vertices, normal, edges, rgba);\n    }\n\n    return colouredFacet;\n  }\n\n  static fromCoordinateTuplesIndexTupleAndColour(coordinateTuples, indexTuple, colour) {\n    let colouredFacet = null;\n\n    const vertices = verticesFromCoordinateTuplesAndIndexTuple(coordinateTuples, indexTuple, Vertex),\n          area = calculateArea(vertices),\n          areaApproximatelyEqualToZero = isApproximatelyEqualToZero(area),\n          largeEnough = !areaApproximatelyEqualToZero;  ///\n\n    if (largeEnough) {\n      const normal = calculateNormal(vertices, Normal),\n            edges = calculateEdges(vertices, Edge),\n            rgba = [ ...colour, 1 ];  ///\n\n      colouredFacet = new ColouredFacet(vertices, normal, edges, rgba);\n    }\n\n    return colouredFacet;\n  }\n}\n", "\"use strict\";\n\nimport CanvasElement from \"../../element/canvas\";\nimport ColouredFacet from \"../../primitive/facet/coloured\";\n\nexport default class ColouredCanvasElement extends CanvasElement {\n  constructor(transform, facets, mask, hidden, coordinates, indexes, colour) {\n    super(transform, facets, mask, hidden);\n\n    this.coordinates = coordinates;\n\n    this.indexes = indexes;\n\n    this.colour = colour;\n  }\n\n  createFacets(hidden) {\n    hidden = super.createFacets(hidden);  ///\n\n    if (!hidden) {\n      const indexTuples = this.indexes,  ///\n            facets = indexTuples.map((indexTuple) => {\n              const coordinateTuples = this.coordinates, ///\n                    colouredFacet = ColouredFacet.fromCoordinateTuplesIndexTupleAndColour(coordinateTuples, indexTuple, this.colour),\n                    facet = colouredFacet;  ///\n\n              return facet;\n            });\n\n      this.setFacets(facets);\n    }\n  }\n\n  addFacets(colourRenderer, textureRenderer) {\n    const facets = this.getFacets();\n\n    colourRenderer.addFacets(facets);\n\n    super.addFacets(colourRenderer, textureRenderer);\n  }\n\n  static fromProperties(Class, properties, coordinates, indexes, colour, ...remainingArguments) { return CanvasElement.fromProperties(Class, properties, coordinates, indexes, colour, ...remainingArguments); }\n}\n", "\"use strict\";\n\nimport { rotateVertices } from \"../utilities/vertices\";\nimport { invert2, invert3 } from \"../maths/matrix\";\nimport { first, second, third } from \"../utilities/array\";\nimport { calculateArbitraryRotationQuaternion } from \"../utilities/quaternion\";\nimport { add2, multiply2, transform2, transform3 } from \"../maths/vector\";\n\nexport function cloneTextureCoordinateTuples(textureCoordinateTuples) {\n  textureCoordinateTuples = textureCoordinateTuples.map((textureCoordinateTuple) => textureCoordinateTuple.slice());  ///\n\n  return textureCoordinateTuples;\n}\n\nexport function calculateMappedTextureCoordinateTuples(textureCoordinateTuples, extent) {\n  const { left, bottom, width, height } = extent,\n        mappedTextureCoordinateTuples = textureCoordinateTuples.map((textureCoordinateTuple) => add2(multiply2(textureCoordinateTuple, [ width, height ] ), [ left, bottom ])); ///\n\n  return mappedTextureCoordinateTuples;\n}\n\nexport function calculateAdjustedTextureCoordinateTuples(vertices, normal, parentVertices, textureCoordinateTuples) {\n  const arbitraryRotationQuaternion = calculateArbitraryRotationQuaternion(normal),\n        rotationQuaternion = arbitraryRotationQuaternion; ///\n\n  const tempVertices = rotateVertices(vertices, rotationQuaternion);\n\n  parentVertices = rotateVertices(parentVertices, rotationQuaternion);\n\n  vertices = tempVertices;  ///\n\n  const firstVertex = first(vertices),\n        secondVertex = second(vertices),\n        thirdVertex = third(vertices),\n        firstParentVertex = first(parentVertices),\n        secondParentVertex = second(parentVertices),\n        thirdParentVertex = third(parentVertices),\n        firstTextureCoordinateTuple = first(textureCoordinateTuples),\n        secondTextureCoordinateTuple = second(textureCoordinateTuples),\n        thirdTextureCoordinateTuple = third(textureCoordinateTuples),\n        firstVertexPosition = firstVertex.getPosition(),\n        secondVertexPosition = secondVertex.getPosition(),\n        thirdVertexPosition = thirdVertex.getPosition(),\n        firstParentVertexPosition = firstParentVertex.getPosition(),\n        secondParentVertexPosition = secondParentVertex.getPosition(),\n        thirdParentVertexPosition = thirdParentVertex.getPosition(),\n        R1x = firstVertexPosition[0],  ///\n        R1y = firstVertexPosition[1],  ///\n        R2x = secondVertexPosition[0], ///\n        R2y = secondVertexPosition[1], ///\n        R3x = thirdVertexPosition[0],  ///\n        R3y = thirdVertexPosition[1],  ///\n        P1x = firstParentVertexPosition[0], ///\n        P2x = secondParentVertexPosition[0], ///\n        P3x = thirdParentVertexPosition[0], ///\n        P1y = firstParentVertexPosition[1], ///\n        P2y = secondParentVertexPosition[1], ///\n        P3y = thirdParentVertexPosition[1], ///\n        P1u = firstTextureCoordinateTuple[0], ///\n        P1v = firstTextureCoordinateTuple[1], ///\n        P2u = secondTextureCoordinateTuple[0], ///\n        P2v = secondTextureCoordinateTuple[1], ///\n        P3u = thirdTextureCoordinateTuple[0], ///\n        P3v = thirdTextureCoordinateTuple[1], ///\n        textureCoordinatesMatrix = invert3([ 1, 1, 1, P1u, P2u, P3u, P1v, P2v, P3v ]),\n        firstTransformedParentVerticesComponent = transform3([ P1x, P2x, P3x ], textureCoordinatesMatrix),\n        secondTransformedParentVerticesComponent = transform3([ P1y, P2y, P3y ], textureCoordinatesMatrix),\n        Ox = firstTransformedParentVerticesComponent[0],  ///\n        Ux = firstTransformedParentVerticesComponent[1],  ///\n        Vx = firstTransformedParentVerticesComponent[2],  ///\n        Oy = secondTransformedParentVerticesComponent[0],  ///\n        Uy = secondTransformedParentVerticesComponent[1],  ///\n        Vy = secondTransformedParentVerticesComponent[2],  ///\n        transformedParentVerticesMatrix = invert2([ Ux, Uy, Vx, Vy ]),\n        firstAdjustedTextureCoordinate = transform2([ R1x - Ox, R1y - Oy ], transformedParentVerticesMatrix),\n        secondAdjustedTextureCoordinate = transform2([ R2x - Ox, R2y - Oy ], transformedParentVerticesMatrix),\n        thirdAdjustedTextureCoordinate = transform2([ R3x - Ox, R3y - Oy ], transformedParentVerticesMatrix),\n        adjustedTextureCoordinateTuple = [\n          firstAdjustedTextureCoordinate,\n          secondAdjustedTextureCoordinate,\n          thirdAdjustedTextureCoordinate,\n        ];\n\n  return adjustedTextureCoordinateTuple;\n}\n", "\"use strict\";\n\nimport Edge from \"../edge\";\nimport Facet from \"../facet\";\nimport Normal from \"../normal\";\nimport Vertex from \"../vertex\";\n\nimport { permute } from \"../../utilities/array\";\nimport { isApproximatelyEqualToZero } from \"../../utilities/approximate\";\nimport { verticesFromCoordinateTuplesAndIndexTuple } from \"../../utilities/vertices\";\nimport { cloneEdges, cloneNormal, cloneVertices, calculateArea, calculateEdges, calculateNormal } from \"../../utilities/facet\";\nimport { cloneTextureCoordinateTuples, calculateMappedTextureCoordinateTuples, calculateAdjustedTextureCoordinateTuples } from \"../../utilities/texture\";\n\nexport default class TexturedFacet extends Facet {\n  constructor(vertices, normal, edges, imageName, textureCoordinateTuples) {\n    super(vertices, normal, edges);\n\n    this.imageName = imageName;\n\n    this.textureCoordinateTuples = textureCoordinateTuples;\n  }\n\n  clone() {\n    let vertices = this.getVertices(),\n        normal = this.getNormal(),\n        edges = this.getEdges();\n\n    vertices = cloneVertices(vertices);\n    normal = cloneNormal(normal);\n    edges = cloneEdges(edges);\n\n    const imageName = this.imageName, ///\n          textureCoordinateTuples = cloneTextureCoordinateTuples(this.textureCoordinateTuples),\n          texturedFacet = new TexturedFacet(vertices, normal, edges, imageName, textureCoordinateTuples);\n\n    return texturedFacet;\n  }\n\n  getImageName() {\n    return this.imageName;\n  }\n\n  getTextureCoordinateTuples() {\n    return this.textureCoordinateTuples;\n  }\n\n  getMappedTextureCoordinateTuples(imageMapJSON) {\n    const json = imageMapJSON[this.imageName],\n          extent = json,  ///\n          mappedTextureCoordinateTuples = calculateMappedTextureCoordinateTuples(this.textureCoordinateTuples, extent);\n\n    return mappedTextureCoordinateTuples;\n  }\n\n  permute(places) {\n    super.permute(places);\n\n    this.textureCoordinateTuples = permute(this.textureCoordinateTuples, places);\n  }\n\n  fromVertices(vertices) {\n    let texturedFacet = null;\n\n    const area = calculateArea(vertices),\n          areaApproximatelyEqualToZero = isApproximatelyEqualToZero(area),\n          largeEnough = !areaApproximatelyEqualToZero;  ///\n\n    if (largeEnough) {\n      const normal = calculateNormal(vertices, Normal),\n            parentVertices = this.vertices, ///\n            adjustedTextureCoordinateTuple = calculateAdjustedTextureCoordinateTuples(vertices, normal, parentVertices, this.textureCoordinateTuples),\n            edges = calculateEdges(vertices, Edge),\n            imageName = this.imageName,\n            textureCoordinateTuples = adjustedTextureCoordinateTuple;  ///\n\n      texturedFacet = new TexturedFacet(vertices, normal, edges, imageName, textureCoordinateTuples);\n    }\n\n    return texturedFacet;\n  }\n\n  static fromTextureCoordinateTuplesCoordinatesTuplesIndexTupleAndImageName(textureCoordinateTuples, coordinateTuples, indexTuple, imageName) {\n    let texturedFacet = null;\n\n    const vertices = verticesFromCoordinateTuplesAndIndexTuple(coordinateTuples, indexTuple, Vertex),\n          area = calculateArea(vertices),\n          areaApproximatelyEqualToZero = isApproximatelyEqualToZero(area),\n          largeEnough = !areaApproximatelyEqualToZero;  ///\n\n    if (largeEnough) {\n      const normal = calculateNormal(vertices, Normal),\n            edges = calculateEdges(vertices, Edge);\n\n      texturedFacet = new TexturedFacet(vertices, normal, edges, imageName, textureCoordinateTuples);\n    }\n\n    return texturedFacet;\n  }\n}\n", "\"use strict\";\n\nimport CanvasElement from \"../../element/canvas\";\nimport TexturedFacet from \"../../primitive/facet/textured\";\n\nexport default class TexturedCanvasElement extends CanvasElement {\n  constructor(transform, facets, mask, hidden, coordinates, indexes, imageName, textureCoordinates) {\n    super(transform, facets, mask, hidden);\n\n    this.coordinates = coordinates;\n\n    this.indexes = indexes;\n\n    this.imageName = imageName;\n\n    this.textureCoordinates = textureCoordinates;\n  }\n\n  createFacets(hidden) {\n    hidden = super.createFacets(hidden);  ///\n\n    if (!hidden) {\n      const indexTuples = this.indexes,  ///\n            facets = indexTuples.map((indexTuple, index) => {\n              const vertexTextureCoordinateTuples = this.textureCoordinates[index], ///\n                    coordinateTuples = this.coordinates, ///\n                    texturedFacet = TexturedFacet.fromTextureCoordinateTuplesCoordinatesTuplesIndexTupleAndImageName(vertexTextureCoordinateTuples, coordinateTuples, indexTuple, this.imageName),\n                    facet = texturedFacet;  ///\n\n              return facet;\n            });\n\n      this.setFacets(facets);\n    }\n  }\n\n  addFacets(colourRenderer, textureRenderer) {\n    const facets = this.getFacets();\n\n    textureRenderer.addFacets(facets);\n\n    super.addFacets(colourRenderer, textureRenderer);\n  }\n\n  static fromProperties(Class, properties, coordinates, indexes, imageName, textureCoordinates, ...remainingArguments) { return CanvasElement.fromProperties(Class, properties, coordinates, indexes, imageName, textureCoordinates, ...remainingArguments); }\n}\n", "'use strict';\n\nimport \"./xgl\";\n\nexport { default as Canvas } from \"./canvas\";\nexport { default as Mask } from \"./element/mask\";\nexport { default as Part } from \"./element/part\";\nexport { default as Scene } from \"./element/scene\";\nexport { default as Camera } from \"./element/camera\";\nexport { default as GamingCamera } from \"./element/camera/gaming\";\nexport { default as DesignCamera } from \"./element/camera/design\";\nexport { default as CanvasElement } from \"./element/canvas\";\nexport { default as ColouredCanvasElement } from \"./element/canvas/coloured\";\nexport { default as TexturedCanvasElement } from \"./element/canvas/textured\";\n", "\"use strict\";\n\nimport { ColouredCanvasElement } from \"../../index\"; ///\n\nconst coordinates = [\n\n        [ 0, 0, 0 ],\n        [ 1, 0, 0 ],\n        [ 0, 1, 0 ],\n        [ 1, 1, 0 ],\n\n      ],\n      indexes = [\n\n        [ 0, 1, 3 ],\n        [ 3, 2, 0 ],\n\n      ],\n      defaultColour = [ 1, 0, 0 ];\n\nexport default class ColouredSquare extends ColouredCanvasElement {\n  static fromProperties(properties) {\n  \tconst { colour = defaultColour } = properties,\n\t\t\t    colouredSquare = ColouredCanvasElement.fromProperties(ColouredSquare, properties, coordinates, indexes, colour);\n\n  \treturn colouredSquare;\n  }\n}\n", "\"use strict\";\n\nimport ColouredSquare from \"./colouredSquare\";\n\nconst Face = (properties) => {\n  const { colour } = properties;\n\n  return (\n\n    <ColouredSquare colour={colour} position={[ -0.5, -0.5, +0.5 ]} />\n\n  );\n};\n\nexport default Face;\n", "\"use strict\";\n\nimport Face from \"./face\";\n\nconst defaultColour = [ 1, 1, 0 ];\n\nconst Cube = (properties) => {\n  const { colour = defaultColour } = properties;\n\n  return ([\n\n    <Face colour={colour} rotations={[   0,   0, 0 ]} />,\n    <Face colour={colour} rotations={[ +90,   0, 0 ]} />,\n    <Face colour={colour} rotations={[   0, +90, 0 ]} />,\n\n    <Face colour={colour} rotations={[ 180,   0, 0 ]} />,\n    <Face colour={colour} rotations={[ -90,   0, 0 ]} />,\n    <Face colour={colour} rotations={[   0, -90, 0 ]} />,\n\n  ]);\n};\n\nexport default Cube;\n", "\"use strict\";\n\nimport { Canvas, Scene, Part, DesignCamera } from \"../index\";  ///\n\nimport Cube from \"./element/cube\";\n\nconst canvas = new Canvas();\n\nconst cubeExample = () =>\n\n  <Scene canvas={canvas}>\n    <Part>\n      <Cube colour={[ 0, 1, 0 ]} />\n    </Part>\n    <DesignCamera />\n  </Scene>\n\n;\n\nexport default cubeExample;\n", "\"use strict\";\n\nimport { Canvas, Scene, Part, DesignCamera } from \"../index\";  ///\n\nimport ColouredSquare from \"./element/colouredSquare\";\n\nconst canvas = new Canvas();\n\nconst simpleExample = () =>\n\n  <Scene canvas={canvas}>\n    <Part>\n      <ColouredSquare colour={[ 0, 0, 1 ]} />\n    </Part>\n    <DesignCamera />\n  </Scene>\n\n;\n\nexport default simpleExample;\n", "\"use strict\";\n\nimport { Canvas, Scene, Mask, Part, DesignCamera } from \"../index\";  ///\n\nimport Cube from \"./element/cube\";\n\nconst canvas = new Canvas();\n\nconst maskingExample = () => {\n  const SmallCube = (properties) =>\n\n          <Cube scale={[ 1/4, 1/4, 1/4 ]} />\n\n        ,\n        smallCubeMask =\n\n          <Mask>\n            <SmallCube />\n          </Mask>\n\n        ,\n        MediumCube = (properties) =>\n\n          <Cube scale={[ 1/2, 1/2, 1/2 ]} mask={smallCubeMask} />\n\n        ,\n        mediumCubeMask =\n\n          <Mask>\n            <MediumCube />\n          </Mask>\n\n        ,\n        LargeCube = (properties) =>\n\n          <Cube mask={mediumCubeMask} />\n\n        ;\n\n  return (\n\n    <Scene canvas={canvas}>\n      <Part>\n        <LargeCube />\n      </Part>\n      <DesignCamera />\n    </Scene>\n\n  );\n};\n\nexport default maskingExample;\n", "\"use strict\";\n\nimport { TexturedCanvasElement } from \"../../index\"; ///\n\nconst coordinates = [\n\n        [   0, 0, 0 ],\n        [   1, 0, 0 ],\n        [ 0.5, 1, 0 ],\n\n      ],\n      indexes = [\n\n        [ 0, 1, 2 ],\n\n      ],\n      defaultImageName = \"stripes.jpg\",\n      defaultTextureCoordinates = [\n\n        [ [ 0, 0 ], [ 1, 0 ], [ 0.5, 1 ] ],\n\n      ];\n\nexport default class TexturedTriangle extends TexturedCanvasElement {\n  static fromProperties(properties) {\n    const { imageName = defaultImageName, textureCoordinates = defaultTextureCoordinates } = properties,\n          texturedTriangle = TexturedCanvasElement.fromProperties(TexturedTriangle, properties, coordinates, indexes, imageName, textureCoordinates);\n\n    return texturedTriangle;\n  }\n}\n", "\"use strict\";\n\nimport TexturedTriangle from \"./texturedTriangle\";\n\nconst Side = (properties) =>\n\n  <TexturedTriangle scale={[ 1, 1/Math.sqrt(2), 1 ]} position={[ -0.5, 0, 0.5 ]} rotations={[ -45, 0, 0 ]} />\n\n;\n\nexport default Side;\n", "\"use strict\";\n\nimport Side from \"./side\";\n\nconst Pyramid = (properties) => [\n\n  <Side />,\n  <Side rotations={[ 0,  90, 0 ]} />,\n  <Side rotations={[ 0, 180, 0 ]} />,\n  <Side rotations={[ 0, 270, 0 ]} />,\n\n];\n\nexport default Pyramid;\n", "\"use strict\";\n\nconst configuration = window.__configuration__; ///\n\nexport default configuration;\n", "\"use strict\";\n\nimport { Canvas, Scene, Part, GamingCamera } from \"../index\";  ///\n\nimport Pyramid from \"./element/pyramid\";\nimport configuration from \"../miscellaneous/configuration\";\n\nconst canvas = new Canvas();\n\nconst pyramidExample = () => {\n  preloadImageMap((imageMap) => {\n    const { imageMapJSON } = configuration;\n\n    return (\n\n      <Scene canvas={canvas}>\n        <Part imageMap={imageMap} imageMapJSON={imageMapJSON}>\n          <Pyramid />\n        </Part>\n        <GamingCamera />\n      </Scene>\n\n    );\n  });\n};\n\nexport default pyramidExample;\n\nfunction preloadImageMap(callback) {\n  const { imageMapURI } = configuration,\n        imageMap = new Image(),\t///\n        src = imageMapURI;  ///\n\n  Object.assign(imageMap, {\n    src,\n    onload\n  });\n\n  function onload(event) {\n    callback(imageMap);\n  }\n}\n", "\"use strict\";\n\nimport { TexturedCanvasElement } from \"../../index\"; ///\n\nconst coordinates = [\n\n        [ 0, 0, 0 ],\n        [ 1, 0, 0 ],\n        [ 0, 1, 0 ],\n        [ 1, 1, 0 ],\n\n      ],\n      indexes = [\n\n        [ 0, 1, 3 ],\n        [ 3, 2, 0 ],\n\n      ],\n      defaultImageName = \"plaster.jpg\",\n      defaultTextureCoordinates = [\n\n        [ [ 0, 0 ], [ 2, 0 ], [ 2, 2 ] ],\n        [ [ 2, 2 ], [ 0, 2 ], [ 0, 0 ] ],\n\n      ];\n\nexport default class TexturedQuadrangle extends TexturedCanvasElement {\n  static fromProperties(properties) {\n    const { imageName = defaultImageName, textureCoordinates = defaultTextureCoordinates } = properties,\n          texturedQuadrangle = TexturedCanvasElement.fromProperties(TexturedQuadrangle, properties, coordinates, indexes, imageName, textureCoordinates);\n\n    return texturedQuadrangle;\n  }\n}\n", "\"use strict\";\n\nimport { asynchronousUtilities } from \"necessary\";\nimport { Canvas, Scene, Part, Mask, DesignCamera } from \"../index\";  ///\n\nimport configuration from \"../miscellaneous/configuration\";\nimport ColouredSquare from \"./element/colouredSquare\";\nimport TexturedQuadrangle from \"./element/texturedQuadrangle\";\n\nconst { forEach } = asynchronousUtilities;\n\nconst canvas = new Canvas(),\n      mask =\n\n        <Mask>\n          <ColouredSquare scale={[ 0.25, 0.25, 1 ]} position={[ 0.125, 0.125, 0 ]} />\n        </Mask>\n\n      ;\n\nconst tilingExample = () => {\n  const { imageNames, imageDirectoryURI } = configuration;\n\n  preloadImages(imageNames, imageDirectoryURI, (images) => {\n    return (\n\n      <Scene canvas={canvas}>\n        <Part images={images} imageNames={imageNames} imageTiling >\n          <TexturedQuadrangle position={[ 0, 0, 0 ]} imageName=\"floorboards.jpg\" mask={mask} />\n          <TexturedQuadrangle position={[ -0.5, -0.5, -0.5 ]} imageName=\"paving.jpg\" mask={mask} />\n        </Part>\n        <DesignCamera />\n      </Scene>\n\n    );\n  });\n};\n\nexport default tilingExample;\n\nfunction preloadImages(imageNames, imageDirectoryURI, callback) {\n  const images = [],\n        context = {\n          images\n        };\n\n  forEach(imageNames, (imageName, next, done, context) => {\n    const image = new Image(),\n          src = `${imageDirectoryURI}/${imageName}`;\n\n    Object.assign(image, {\n      src,\n      onload\n    });\n\n    function onload() {\n      images.push(image);\n\n      next();\n    }\n  }, done, context);\n\n  function done() {\n    const { images } = context;\n\n    callback(images);\n  }\n}\n", "\"use strict\";\n\nimport cubeExample from \"./example/cube\";\nimport simpleExample from \"./example/simple\";\nimport maskingExample from \"./example/masking\";\nimport pyramidExample from \"./example/pyramid\";\nimport tilingExample from \"./example/tiling\";\n\nconst example = window.location.search.substring(1);  ///\n\nswitch (example) {\n  case \"simple\":\n    simpleExample();\n    break;\n\n  case \"cube\":\n    cubeExample();\n    break;\n\n  case \"masking\":\n    maskingExample();\n    break;\n\n  case \"pyramid\":\n    pyramidExample();\n    break;\n\n  case \"tiling\":\n    tilingExample();\n    break;\n}"],
  "mappings": "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",
  "names": []
}
